{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\GreedyAssignment\\\\assignment\\\\src\\\\Knapsack\\\\main.js\";\nimport React, { useState } from \"react\";\n\nfunction SolutionKnapsack() {\n  const [fields, setFields] = useState([{\n    value1: null,\n    value2: null\n  }]);\n  const [maxW, setmaxW] = useState(null);\n\n  function handleWeight(event) {\n    const value = event.target.value;\n    setmaxW(value);\n  }\n\n  function handleChangeValue1(i, event) {\n    const values = [...fields];\n    values[i].value1 = event.target.value;\n    setFields(values);\n  }\n\n  function handleChangeValue2(i, event) {\n    const values = [...fields];\n    values[i].value2 = event.target.value;\n    setFields(values);\n  }\n\n  function handleAdd() {\n    const values = [...fields];\n    values.push({\n      value1: null,\n      value2: null\n    });\n    setFields(values);\n  }\n\n  function handleRemove(i) {\n    const values = [...fields];\n    values.splice(i, 1);\n    setFields(values);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container form\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Weight of Knapsack\",\n    onChange: e => handleWeight(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary addbtn\",\n    onClick: () => handleAdd(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Add Item\"), fields.map((field, idx) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: `${field}-${idx}`,\n      className: \"inputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      value: field.value1,\n      placeholder: \"Enter Profit\",\n      onChange: e => handleChangeValue1(idx, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        marginLeft: \"10px\"\n      },\n      type: \"number\",\n      value: field.value2,\n      placeholder: \"Enter Weight\",\n      onChange: e => handleChangeValue2(idx, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary removebtn\",\n      onClick: () => handleRemove(idx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, \"Remove item\"));\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    style: {\n      marginTop: \"10px\",\n      backgroundColor: \"#263145\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Get Solution\")))); // return(\n  //     <div className= \"container\" style={{marginTop: \"50px\"}}>\n  //     <div className=\"row\">\n  //         <div className=\"col-lg-6\">\n  //         <form>\n  //              {/* To get the max weight of the knapsack */}\n  //              <div className=\"max-weight\">\n  //                  <p>Capacity of the knapsack</p>\n  //                  <input type=\"number\"></input>\n  //             </div>\n  //                 {/* To get respective items data */}\n  //             <div id= \"item-data\" style={{marginTop: \"20px\"}}>\n  //                 <button className= \"btn btn-primary\" onClick={() => handleAdd()}>Add item</button>\n  //                 <button className= \"btn btn-primary\" onClick={() => handleremove()} style={{marginLeft: \"10px\"}}>Remove item</button>\n  //                 <DataInput />\n  //             </div>\n  //         </form>\n  //         </div>\n  //     </div>\n  //     </div>\n  // )\n}\n\nexport default SolutionKnapsack;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/GreedyAssignment/assignment/src/Knapsack/main.js"],"names":["React","useState","SolutionKnapsack","fields","setFields","value1","value2","maxW","setmaxW","handleWeight","event","value","target","handleChangeValue1","i","values","handleChangeValue2","handleAdd","push","handleRemove","splice","marginTop","e","map","field","idx","marginLeft","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nfunction SolutionKnapsack(){\r\n\r\n    const [fields, setFields] = useState([{ value1: null, value2: null }]);\r\n    const [maxW, setmaxW] = useState(null);\r\n  \r\n\r\n    function handleWeight(event){\r\n        const value= event.target.value;\r\n        setmaxW(value);\r\n    }\r\n\r\n    function handleChangeValue1(i, event) {\r\n      const values = [...fields];\r\n      values[i].value1 = event.target.value;\r\n      setFields(values);\r\n    }\r\n\r\n    function handleChangeValue2(i, event){\r\n        const values = [...fields];\r\n        values[i].value2 = event.target.value;\r\n        setFields(values);\r\n    }\r\n  \r\n    function handleAdd() {\r\n      const values = [...fields];\r\n      values.push({ value1: null, value2: null });\r\n      setFields(values);\r\n    }\r\n  \r\n    function handleRemove(i) {\r\n      const values = [...fields];\r\n      values.splice(i, 1);\r\n      setFields(values);\r\n    }\r\n  \r\n    return (\r\n\r\n      <div className=\"container form\" style={{marginTop: \"20px\"}}>\r\n      <div className= \"row\">\r\n          <div className= \"col-lg-6\">\r\n\r\n            {/* To get the max weight of the knapsack */}\r\n                <input type=\"number\" placeholder=\"Weight of Knapsack\" onChange= {e=> handleWeight(e)}></input>\r\n\r\n                <br></br>\r\n\r\n                <button type=\"button\" className=\"btn btn-primary addbtn\" onClick={() => handleAdd()}>\r\n                Add Item\r\n                </button>\r\n        \r\n                {fields.map((field, idx) => {\r\n                return (\r\n                    <div key={`${field}-${idx}`} className= \"inputs\">\r\n                    <input\r\n                        type=\"number\" \r\n                        value={field.value1} \r\n                        placeholder=\"Enter Profit\" \r\n                        onChange={e => handleChangeValue1(idx, e)}\r\n                    />\r\n                    <input style={{marginLeft: \"10px\"}}\r\n                        type=\"number\" \r\n                        value={field.value2} \r\n                        placeholder=\"Enter Weight\" \r\n                        onChange={e => handleChangeValue2(idx, e)}\r\n                    />\r\n                    <button type=\"button\" className= \"btn btn-primary removebtn\" onClick={() => handleRemove(idx)}>\r\n                        Remove item\r\n                    </button>\r\n                    </div>\r\n                );\r\n                })}\r\n                <br></br>\r\n\r\n                {/* Get the Solution button */}\r\n                <button className=\"btn btn-primary\" style={{marginTop: \"10px\", backgroundColor: \"#263145\"}}>Get Solution</button>\r\n          </div>\r\n      </div>\r\n  \r\n        \r\n      </div>\r\n    );\r\n\r\n    \r\n\r\n    // return(\r\n    //     <div className= \"container\" style={{marginTop: \"50px\"}}>\r\n    //     <div className=\"row\">\r\n    //         <div className=\"col-lg-6\">\r\n\r\n    //         <form>\r\n    //              {/* To get the max weight of the knapsack */}\r\n    //              <div className=\"max-weight\">\r\n    //                  <p>Capacity of the knapsack</p>\r\n    //                  <input type=\"number\"></input>\r\n    //             </div>\r\n\r\n    //                 {/* To get respective items data */}\r\n    //             <div id= \"item-data\" style={{marginTop: \"20px\"}}>\r\n    //                 <button className= \"btn btn-primary\" onClick={() => handleAdd()}>Add item</button>\r\n    //                 <button className= \"btn btn-primary\" onClick={() => handleremove()} style={{marginLeft: \"10px\"}}>Remove item</button>\r\n\r\n    //                 <DataInput />\r\n    //             </div>\r\n\r\n    //         </form>\r\n           \r\n    //         </div>\r\n    //     </div>\r\n            \r\n    //     </div>\r\n    // )\r\n}\r\n\r\nexport default SolutionKnapsack;"]},"metadata":{},"sourceType":"module"}