{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\GreedyAssignment\\\\assignment\\\\src\\\\Dijkstra\\\\main.js\";\nimport React, { useState } from \"react\"; // var array= [\n// \t{\n// \t\tstartNode: \"A\", \n// \t\tNodeData: [\n// \t\t\t\t{newNode: \"B\", cost: 3}, \n// \t\t\t\t{newNode: \"C\", cost: 4}\n// \t\t\t  ]\n// \t},\n// \t{\n// \t\tstartNode: \"D\", \n// \t\tNodeData: [\n// \t\t\t\t{newNode: \"E\", cost: 5}, \n// \t\t\t\t{newNode: \"F\", cost: 6}\n// \t\t\t  ]\n// \t}\n//  ]\n\nfunction Solution() {\n  // For Each Start Node get an Object ready and push it into the array\n  const [fields, setFields] = useState([{\n    startNode: null,\n    NodeData: [{\n      newNode: null,\n      cost: null\n    }]\n  }]);\n  const [solution, setSolution] = useState(false);\n\n  function handleChangeStart(i, event) {\n    const values = [...fields];\n    values[i].startNode = event.target.value;\n    setFields(values);\n  }\n\n  function handleChangeEnd(i, event) {\n    const values = [...fields];\n    values[i].NodeData[j].newNode = event.target.value;\n    setFields(values);\n  }\n\n  function handleChangeCost(i, event) {\n    const values = [...fields];\n    values[i].NodeData[j].cost = event.target.value;\n    setFields(values);\n  }\n\n  function handleAdd() {\n    const values = [...fields];\n    values.push({\n      starttime: null,\n      endtime: null\n    });\n    setFields(values);\n  }\n\n  function handleAddRelation(i) {\n    const values = [...fields];\n    let obj = {\n      newNode: null,\n      cost: null\n    };\n    values[i].NodeData.push(obj);\n    setFields(values);\n  }\n\n  function handleRemoveRelation(i) {\n    let obj = fields[i];\n    const values = obj.NodeData;\n    values.splice(i, 1);\n    setFields(values);\n  }\n\n  function getSolution() {\n    setSolution(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container form\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary addbtn\",\n    onClick: () => handleAdd(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Add Node\"), fields.map((field, idx) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: `${field}-${idx}`,\n      className: \"inputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: field.value1,\n      placeholder: \"Node label (Example : A)\",\n      onChange: e => handleChangeStart(idx, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary addRelation\",\n      style: {\n        marginLeft: \"10px\"\n      },\n      onClick: () => handleAddRelation(idx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, \"Add Relation\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        marginTop: \"10px\"\n      },\n      type: \"text\",\n      value: field.value2,\n      placeholder: \"Destination Label (Ex : B)\",\n      onChange: e => handleChangeEnd(idx, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        marginLeft: \"8px\"\n      },\n      type: \"number\",\n      value: field.value2,\n      placeholder: \"Cost Value\",\n      onChange: e => handleChangeCost(idx, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary removebtn\",\n      onClick: () => handleRemoveRelation(idx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, \"Remove Relation\"));\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    style: {\n      marginTop: \"10px\",\n      backgroundColor: \"#263145\"\n    },\n    onClick: () => getSolution(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, \"Get Solution\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default Solution;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/GreedyAssignment/assignment/src/Dijkstra/main.js"],"names":["React","useState","Solution","fields","setFields","startNode","NodeData","newNode","cost","solution","setSolution","handleChangeStart","i","event","values","target","value","handleChangeEnd","j","handleChangeCost","handleAdd","push","starttime","endtime","handleAddRelation","obj","handleRemoveRelation","splice","getSolution","marginTop","map","field","idx","value1","e","marginLeft","value2","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\n\r\n// var array= [\r\n// \t{\r\n// \t\tstartNode: \"A\", \r\n// \t\tNodeData: [\r\n// \t\t\t\t{newNode: \"B\", cost: 3}, \r\n// \t\t\t\t{newNode: \"C\", cost: 4}\r\n// \t\t\t  ]\r\n// \t},\r\n// \t{\r\n// \t\tstartNode: \"D\", \r\n// \t\tNodeData: [\r\n// \t\t\t\t{newNode: \"E\", cost: 5}, \r\n// \t\t\t\t{newNode: \"F\", cost: 6}\r\n// \t\t\t  ]\r\n// \t}\r\n//  ]\r\n\r\nfunction Solution(){\r\n\r\n    // For Each Start Node get an Object ready and push it into the array\r\n    \r\n    const [fields, setFields] = useState(\r\n            [\r\n                {\r\n                    startNode: null,\r\n                    NodeData: [\r\n                        {\r\n                            newNode: null,\r\n                            cost: null\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        );\r\n\r\n    const [solution, setSolution]= useState(false);\r\n  \r\n\r\n    function handleChangeStart(i, event) {\r\n      const values = [...fields];\r\n      values[i].startNode = event.target.value;\r\n      setFields(values);\r\n    }\r\n\r\n    function handleChangeEnd(i, event){\r\n        const values = [...fields];\r\n        values[i].NodeData[j].newNode = event.target.value;\r\n        setFields(values);\r\n    }\r\n\r\n    function handleChangeCost(i ,event){\r\n        const values = [...fields];\r\n        values[i].NodeData[j].cost = event.target.value;\r\n        setFields(values);\r\n\r\n    }\r\n  \r\n    function handleAdd() {\r\n      const values = [...fields];\r\n      values.push({ starttime: null, endtime: null });\r\n      setFields(values);\r\n    }\r\n\r\n    function handleAddRelation(i){\r\n        const values= [...fields];\r\n\r\n        let obj= {newNode: null, cost: null}\r\n        values[i].NodeData.push(obj);\r\n        setFields(values)\r\n    }\r\n  \r\n    function handleRemoveRelation(i) {\r\n      let obj= fields[i];\r\n\r\n      const values= obj.NodeData;\r\n \r\n      values.splice(i, 1);\r\n      setFields(values);\r\n    }\r\n\r\n    function getSolution(){\r\n                \r\n        setSolution(true);\r\n    }\r\n\r\n  \r\n  \r\n    return (\r\n\r\n      <div className=\"container form\" style={{marginTop: \"20px\"}}>\r\n      <div className= \"row\">\r\n          <div className= \"col-lg-6\">\r\n\r\n                <br></br>\r\n\r\n                <button type=\"button\" className=\"btn btn-primary addbtn\" onClick={() => handleAdd()}>\r\n                Add Node\r\n                </button>\r\n        \r\n                {fields.map((field, idx) => {\r\n                return (\r\n                    <div key={`${field}-${idx}`} className= \"inputs\">\r\n                    <input\r\n                        type=\"text\" \r\n                        value={field.value1} \r\n                        placeholder=\"Node label (Example : A)\" \r\n                        onChange={e => handleChangeStart(idx, e)}\r\n                    />\r\n                    <button type=\"button\" className=\"btn btn-primary addRelation\" style={{marginLeft: \"10px\"}} onClick={() => handleAddRelation(idx)}>\r\n                    Add Relation\r\n                    </button>\r\n                    \r\n                    <br>\r\n                        \r\n                    </br>\r\n\r\n\r\n\r\n                    \r\n                    {/* Individual Node Data */}\r\n                    <input style={{marginTop: \"10px\"}}\r\n                        type=\"text\" \r\n                        value={field.value2} \r\n                        placeholder=\"Destination Label (Ex : B)\" \r\n                        onChange={e => handleChangeEnd(idx, e)}\r\n                    />\r\n                    <input style={{marginLeft: \"8px\"}}\r\n                        type=\"number\" \r\n                        value={field.value2} \r\n                        placeholder=\"Cost Value\" \r\n                        onChange={e => handleChangeCost(idx, e)}\r\n                    />\r\n\r\n\r\n\r\n                    <button type=\"button\" className= \"btn btn-primary removebtn\" onClick={() => handleRemoveRelation(idx)}>\r\n                        Remove Relation\r\n                    </button>\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                );\r\n                })}\r\n                <br></br>\r\n\r\n                {/* Get the Solution button */}\r\n                <button \r\n                className=\"btn btn-primary\" \r\n                style={{marginTop: \"10px\", backgroundColor: \"#263145\"}}\r\n                onClick={() => getSolution()}\r\n                >\r\n                Get Solution\r\n                </button>\r\n          </div>\r\n\r\n          <div className= \"col-lg-6\">\r\n          {/* Rendering solution component based on the value of solution variable */}\r\n          {/* {solution ?\r\n           <Solution \r\n            mainData = {[...fields]}\r\n            />\r\n          : null} */}\r\n\r\n          </div>\r\n      </div>\r\n  \r\n        \r\n      </div>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Solution;"]},"metadata":{},"sourceType":"module"}