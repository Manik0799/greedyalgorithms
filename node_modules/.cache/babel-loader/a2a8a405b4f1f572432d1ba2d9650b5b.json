{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\GreedyAssignment\\\\assignment\\\\src\\\\Knapsack\\\\solution.js\";\nimport React, { useState } from \"react\";\n\nfunction Solution(props) {\n  const dataArray = new Array();\n  const maxWeight = props.maxWeight;\n\n  for (let i = 0; i < props.mainData.length; i++) {\n    let pwratio = props.mainData[i].value1 / props.mainData[i].value2;\n    let obj = {\n      ratio: pwratio,\n      index: i\n    };\n    dataArray.push(obj);\n  }\n\n  dataArray.sort((a, b) => a.ratio > b.ratio ? 1 : -1); // console.log(dataArray);\n\n  let ans = new Array(dataArray.length).fill(0); // console.log(ans);\n  // Main Code\n\n  function getSolution() {\n    let w = 0;\n\n    for (let i = dataArray.length - 1; i >= 0; i--) {\n      let obj = dataArray[i];\n      let path = obj.index;\n      let weightvalue = props.mainData[path].value2;\n      let profitvalue = props.mainData[path].value1;\n      weightvalue = parseInt(weightvalue);\n      profitvalue = parseInt(profitvalue);\n      console.log(profitvalue);\n\n      if (w + weightvalue < maxWeight) {\n        ans[path] = 1 * weightvalue;\n        w += weightvalue;\n      } else {\n        ans[path] = (maxWeight - w) / weightvalue * weightvalue;\n        w = maxWeight;\n        break;\n      }\n    } // console.log(ans);\n\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"knapsacksolution\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Solution : \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Weight of Knapsack : \", props.maxWeight), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Total profit : Rs. \", profit, \" \"), getSolution(), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Weights to pick of respective items : \"), ans.map(item => /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 31\n    }\n  }, item, \" kg\")));\n}\n\nexport default Solution;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/GreedyAssignment/assignment/src/Knapsack/solution.js"],"names":["React","useState","Solution","props","dataArray","Array","maxWeight","i","mainData","length","pwratio","value1","value2","obj","ratio","index","push","sort","a","b","ans","fill","getSolution","w","path","weightvalue","profitvalue","parseInt","console","log","profit","map","item"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nfunction Solution(props){\r\n\r\n    const dataArray =new Array();\r\n    const maxWeight= props.maxWeight;\r\n\r\n    for(let i=0;i<props.mainData.length;i++){\r\n        let pwratio= props.mainData[i].value1/props.mainData[i].value2;\r\n\r\n        let obj= {ratio: pwratio, index: i};\r\n        \r\n        dataArray.push(obj);\r\n    }\r\n    dataArray.sort((a,b) => (a.ratio > b.ratio) ? 1 : -1);\r\n    // console.log(dataArray);\r\n\r\n    let ans= new Array(dataArray.length).fill(0);\r\n    // console.log(ans);\r\n\r\n\r\n\r\n    // Main Code\r\n    function getSolution(){\r\n        let w=0;\r\n        \r\n\r\n        for(let i=dataArray.length-1; i>=0; i--){\r\n\r\n            let obj= dataArray[i];\r\n\r\n            let path= obj.index;\r\n\r\n            let weightvalue= props.mainData[path].value2;\r\n            let profitvalue= props.mainData[path].value1;\r\n            weightvalue= parseInt(weightvalue);\r\n            profitvalue= parseInt(profitvalue);\r\n            console.log(profitvalue);\r\n\r\n            if( w + weightvalue < maxWeight){\r\n\r\n                ans[path]= 1*weightvalue;\r\n                w+= weightvalue;\r\n\r\n            } else{\r\n                ans[path]= ((maxWeight-w)/ weightvalue)* weightvalue;\r\n                w= maxWeight;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // console.log(ans);\r\n    }\r\n    \r\n\r\n    return (\r\n        <div id=\"knapsacksolution\">\r\n            <h1>Solution : </h1>\r\n            <br></br>\r\n            <h2>Weight of Knapsack : {props.maxWeight}</h2>\r\n            <h2>Total profit : Rs. {profit} </h2>\r\n            {getSolution()}\r\n\r\n            <h2>Weights to pick of respective items : </h2>\r\n            {ans.map( item => <h3>{item} kg</h3>)}\r\n\r\n        </div>\r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default Solution;"]},"metadata":{},"sourceType":"module"}