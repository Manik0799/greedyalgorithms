{"ast":null,"code":"var jsgraphs = jsgraphs || {};\n\n(function (jss) {\n  jss.less = function (a1, a2, compare) {\n    return compare(a1, a2) < 0;\n  };\n\n  jss.exchange = function (a, i, j) {\n    var temp = a[i];\n    a[i] = a[j];\n    a[j] = temp;\n  };\n\n  var StackNode = function (value) {\n    this.value = value;\n    this.next = null;\n  };\n\n  jss.StackNode = StackNode;\n\n  var Stack = function () {\n    this.N = 0;\n    this.first = null;\n  };\n\n  Stack.prototype.push = function (a) {\n    this.first = this._push(this.first, a);\n  };\n\n  Stack.prototype._push = function (x, a) {\n    if (x == null) {\n      this.N++;\n      return new jss.StackNode(a);\n    }\n\n    var oldX = x;\n    this.N++;\n    x = new jss.StackNode(a);\n    x.next = oldX;\n    return x;\n  };\n\n  Stack.prototype.pop = function () {\n    if (this.first == null) {\n      return undefined;\n    }\n\n    var oldFirst = this.first;\n    var item = oldFirst.value;\n    this.first = oldFirst.next;\n    this.N--;\n    return item;\n  };\n\n  Stack.prototype.size = function () {\n    return this.N;\n  };\n\n  Stack.prototype.isEmpty = function () {\n    return this.N == 0;\n  };\n\n  Stack.prototype.peep = function () {\n    if (this.first == null) {\n      return undefined;\n    }\n\n    return this.first.value;\n  };\n\n  Stack.prototype.toArray = function () {\n    var result = [];\n    x = this.first;\n\n    while (x != null) {\n      result.push(x.value);\n      x = x.next;\n    }\n\n    return result;\n  };\n\n  jss.Stack = Stack;\n\n  var QueueNode = function (a) {\n    this.value = a;\n    this.next = null;\n  };\n\n  jss.QueueNode = QueueNode;\n\n  var Queue = function () {\n    this.first = null;\n    this.last = null;\n    this.N = 0;\n  };\n\n  Queue.prototype.enqueue = function (item) {\n    var oldLast = this.last;\n    this.last = new jss.QueueNode(item);\n\n    if (oldLast != null) {\n      oldLast.next = this.last;\n    }\n\n    if (this.first == null) {\n      this.first = this.last;\n    }\n\n    this.N++;\n  };\n\n  Queue.prototype.dequeue = function () {\n    if (this.first == null) {\n      return undefined;\n    }\n\n    var oldFirst = this.first;\n    var item = oldFirst.value;\n    this.first = oldFirst.next;\n\n    if (this.first == null) {\n      this.last = null;\n    }\n\n    this.N--;\n    return item;\n  };\n\n  Queue.prototype.size = function () {\n    return this.N;\n  };\n\n  Queue.prototype.isEmpty = function () {\n    return this.N == 0;\n  };\n\n  Queue.prototype.toArray = function () {\n    var result = [];\n    var x = this.first;\n\n    while (x != null) {\n      result.push(x.value);\n      x = x.next;\n    }\n\n    return result;\n  };\n\n  jss.Queue = Queue;\n\n  var MinPQ = function (compare) {\n    this.s = [];\n    this.N = 0;\n\n    if (!compare) {\n      compare = function (a1, a2) {\n        return a1 - a2;\n      };\n    }\n\n    this.compare = compare;\n  };\n\n  MinPQ.prototype.enqueue = function (item) {\n    while (this.s.lengh <= this.N + 1) {\n      this.s.push(0);\n    }\n\n    this.s[++this.N] = item;\n    this.swim(this.N);\n  };\n\n  MinPQ.prototype.swim = function (k) {\n    while (k > 1) {\n      var parent = Math.floor(k / 2);\n\n      if (jss.less(this.s[k], this.s[parent], this.compare)) {\n        jss.exchange(this.s, k, parent);\n        k = parent;\n      } else {\n        break;\n      }\n    }\n  };\n\n  MinPQ.prototype.delMin = function () {\n    if (this.N == 0) {\n      return undefined;\n    }\n\n    var item = this.s[1];\n    jss.exchange(this.s, 1, this.N--);\n    this.sink(1);\n    return item;\n  };\n\n  MinPQ.prototype.sink = function (k) {\n    while (k * 2 <= this.N) {\n      var child = 2 * k;\n\n      if (child < this.N && jss.less(this.s[child + 1], this.s[child], this.compare)) {\n        child++;\n      }\n\n      if (jss.less(this.s[child], this.s[k], this.compare)) {\n        jss.exchange(this.s, child, k);\n        k = child;\n      } else {\n        break;\n      }\n    }\n  };\n\n  MinPQ.prototype.size = function () {\n    return this.N;\n  };\n\n  MinPQ.prototype.isEmpty = function () {\n    return this.N == 0;\n  };\n\n  jss.MinPQ = MinPQ;\n\n  var QuickUnion = function (V) {\n    this.id = [];\n\n    for (var v = 0; v < V; ++v) {\n      this.id.push(v);\n    }\n  };\n\n  QuickUnion.prototype.union = function (v, w) {\n    var q = this.root(v);\n    var p = this.root(w);\n\n    if (p != q) {\n      this.id[p] = q;\n    }\n  };\n\n  QuickUnion.prototype.root = function (q) {\n    while (this.id[q] != q) {\n      q = this.id[q];\n    }\n\n    return q;\n  };\n\n  QuickUnion.prototype.connected = function (v, w) {\n    return this.root(v) == this.root(w);\n  };\n\n  jss.QuickUnion = QuickUnion;\n\n  var IndexMinPQ = function (N, compare) {\n    this.keys = [];\n    this.pq = [];\n    this.qp = []; // positions of key in pq\n\n    for (var i = 0; i <= N; ++i) {\n      this.keys.push(null);\n      this.pq.push(0);\n      this.qp.push(-1);\n    }\n\n    this.N = 0;\n\n    if (!compare) {\n      compare = function (a1, a2) {\n        return a1 - a2;\n      };\n    }\n\n    this.compare = compare;\n  };\n\n  IndexMinPQ.prototype.insert = function (index, key) {\n    this.keys[index] = key;\n    this.pq[++this.N] = index;\n    this.qp[index] = this.N;\n    this.swim(this.N);\n  };\n\n  IndexMinPQ.prototype.decreaseKey = function (index, key) {\n    if (jss.less(key, this.keys[index], this.compare)) {\n      this.keys[index] = key;\n      this.swim(this.qp[index]);\n    }\n  };\n\n  IndexMinPQ.prototype.minKey = function () {\n    return this.keys[this.pq[1]];\n  };\n\n  IndexMinPQ.prototype.min = function () {\n    return this.pq[1];\n  };\n\n  IndexMinPQ.prototype.delMin = function () {\n    var key = this.pq[1];\n    jss.exchange(this.pq, 1, this.N);\n    this.qp[this.pq[1]] = 1;\n    this.qp[this.pq[this.N]] = -1;\n    this.keys[this.pq[this.N]] = null;\n    this.N--;\n    this.sink(1);\n    return key;\n  };\n\n  IndexMinPQ.prototype.swim = function (k) {\n    while (k > 1) {\n      var parent = Math.floor(k / 2);\n\n      if (jss.less(this.keys[this.pq[k]], this.keys[this.pq[parent]], this.compare)) {\n        jss.exchange(this.pq, k, parent);\n        this.qp[this.pq[k]] = k;\n        this.qp[this.pq[parent]] = parent;\n        k = parent;\n      } else {\n        break;\n      }\n    }\n  };\n\n  IndexMinPQ.prototype.sink = function (k) {\n    while (2 * k <= this.N) {\n      var child = k * 2;\n\n      if (child < this.N && jss.less(this.keys[this.pq[child + 1]], this.keys[this.pq[child]], this.compare)) {\n        child++;\n      }\n\n      if (jss.less(this.keys[this.pq[child]], this.keys[this.pq[k]], this.compare)) {\n        jss.exchange(this.pq, k, child);\n        this.qp[this.pq[k]] = k;\n        this.qp[this.pq[child]] = child;\n        k = child;\n      } else {\n        break;\n      }\n    }\n  };\n\n  IndexMinPQ.prototype.containsIndex = function (index) {\n    return this.qp[index] != -1;\n  };\n\n  IndexMinPQ.prototype.isEmpty = function () {\n    return this.N == 0;\n  };\n\n  IndexMinPQ.prototype.size = function () {\n    return this.N;\n  };\n\n  jss.IndexMinPQ = IndexMinPQ;\n\n  var Graph = function (V) {\n    this.V = V;\n    this.adjList = [];\n    this.nodeInfo = [];\n    this.edges = {};\n\n    for (var i = 0; i < V; ++i) {\n      this.adjList.push([]);\n      this.nodeInfo.push({});\n    }\n  };\n\n  Graph.prototype.addEdge = function (v, w) {\n    this.adjList[v].push(w);\n    this.adjList[w].push(v);\n    var edge_id = v + '_' + w;\n\n    if (v > w) {\n      edge_id = w + '_' + v;\n    }\n\n    this.edges[edge_id] = new jss.Edge(v, w, 0);\n  };\n\n  Graph.prototype.adj = function (v) {\n    return this.adjList[v];\n  };\n\n  Graph.prototype.node = function (v) {\n    return this.nodeInfo[v];\n  };\n\n  Graph.prototype.edge = function (v, w) {\n    var edge_id = v + '_' + w;\n\n    if (v > w) {\n      edge_id = w + '_' + v;\n    }\n\n    if (edge_id in this.edges) {\n      return this.edges[edge_id];\n    }\n\n    return null;\n  };\n\n  jss.Graph = Graph;\n\n  var DiGraph = function (V) {\n    this.V = V;\n    this.adjList = [];\n    this.nodeInfo = [];\n    this.edges = {};\n\n    for (var v = 0; v < V; ++v) {\n      this.adjList.push([]);\n      this.nodeInfo.push({});\n    }\n  };\n\n  DiGraph.prototype.addEdge = function (v, w) {\n    this.adjList[v].push(w);\n    var edge_id = v + '_' + w;\n    this.edges[edge_id] = new jss.Edge(v, w, 0);\n  };\n\n  DiGraph.prototype.edge = function (v, w) {\n    var edge_id = v + '_' + w;\n\n    if (edge_id in this.edges) {\n      return this.edges[edge_id];\n    } else {\n      return null;\n    }\n  };\n\n  DiGraph.prototype.adj = function (v) {\n    return this.adjList[v];\n  };\n\n  DiGraph.prototype.node = function (v) {\n    return this.nodeInfo[v];\n  };\n\n  DiGraph.prototype.reverse = function () {\n    var g = new DiGraph(this.V);\n\n    for (var v = 0; v < this.V; ++v) {\n      var adj_v = this.adjList[v];\n\n      for (var i = 0; i < adj_v.length; ++i) {\n        var w = adj_v[i];\n        g.addEdge(w, v);\n      }\n    }\n\n    return g;\n  };\n\n  jss.DiGraph = DiGraph;\n\n  var Edge = function (v, w, weight) {\n    this.v = v;\n    this.w = w;\n    this.weight = weight;\n  };\n\n  Edge.prototype.either = function () {\n    return this.v;\n  };\n\n  Edge.prototype.other = function (x) {\n    return x == this.v ? this.w : this.v;\n  };\n\n  Edge.prototype.from = function () {\n    return this.v;\n  };\n\n  Edge.prototype.to = function () {\n    return this.w;\n  };\n\n  jss.Edge = Edge;\n\n  var WeightedGraph = function (V) {\n    this.V = V;\n    this.adjList = [];\n    this.nodeInfo = [];\n\n    for (var v = 0; v < V; ++v) {\n      this.adjList.push([]);\n      this.nodeInfo.push({});\n    }\n  };\n\n  WeightedGraph.prototype.adj = function (v) {\n    return this.adjList[v];\n  };\n\n  WeightedGraph.prototype.edge = function (v, w) {\n    var adj_v = this.adjList[v];\n\n    for (var i = 0; i < adj_v.length; ++i) {\n      var x = adj_v[i].other(v);\n\n      if (x == w) {\n        return adj_v[i];\n      }\n    }\n\n    return null;\n  };\n\n  WeightedGraph.prototype.node = function (v) {\n    return this.nodeInfo[v];\n  };\n\n  WeightedGraph.prototype.addEdge = function (e) {\n    var v = e.either();\n    var w = e.other(v);\n    this.adjList[v].push(e);\n    this.adjList[w].push(e);\n  };\n\n  jss.WeightedGraph = WeightedGraph;\n\n  var WeightedDiGraph = function (V) {\n    WeightedGraph.call(this, V);\n  };\n\n  WeightedDiGraph.prototype = Object.create(jss.WeightedGraph.prototype);\n\n  WeightedDiGraph.prototype.addEdge = function (e) {\n    var v = e.from();\n    this.adjList[v].push(e);\n  };\n\n  WeightedDiGraph.prototype.edge = function (v, w) {\n    var adj_v = this.adjList[v];\n\n    for (var i = 0; i < adj_v.length; ++i) {\n      var x = adj_v[i].other(v);\n\n      if (x == w) {\n        return adj_v[i];\n      }\n    }\n\n    return null;\n  };\n\n  WeightedDiGraph.prototype.toDiGraph = function () {\n    var g = new jss.DiGraph(this.V);\n\n    for (var v = 0; v < this.V; ++v) {\n      var adj_v = this.adjList[v];\n\n      for (var i = 0; i < adj_v.length; ++i) {\n        var e = adj_v[i];\n        var w = e.other(v);\n        g.addEdge(v, w);\n      }\n    }\n\n    return g;\n  };\n\n  jss.WeightedDiGraph = WeightedDiGraph;\n\n  var FlowEdge = function (v, w, capacity) {\n    this.v = v;\n    this.w = w;\n    this.capacity = capacity;\n    this.flow = 0;\n  };\n\n  FlowEdge.prototype.residualCapacityTo = function (x) {\n    if (x == this.v) {\n      return this.flow;\n    } else {\n      return this.capacity - this.flow;\n    }\n  };\n\n  FlowEdge.prototype.addResidualFlowTo = function (x, deltaFlow) {\n    if (x == this.v) {\n      this.flow -= deltaFlow;\n    } else if (x == this.w) {\n      this.flow += deltaFlow;\n    }\n  };\n\n  FlowEdge.prototype.from = function () {\n    return this.v;\n  };\n\n  FlowEdge.prototype.to = function () {\n    return this.w;\n  };\n\n  FlowEdge.prototype.other = function (x) {\n    return x == this.v ? this.w : this.v;\n  };\n\n  jss.FlowEdge = FlowEdge;\n\n  var FlowNetwork = function (V) {\n    this.V = V;\n    this.adjList = [];\n    this.nodeInfo = [];\n\n    for (var v = 0; v < V; ++v) {\n      this.adjList.push([]);\n      this.nodeInfo.push({});\n    }\n  };\n\n  FlowNetwork.prototype.node = function (v) {\n    return this.nodeInfo[v];\n  };\n\n  FlowNetwork.prototype.edge = function (v, w) {\n    var adj_v = this.adjList[v];\n\n    for (var i = 0; i < adj_v.length; ++i) {\n      var x = adj_v[i].other(v);\n\n      if (x == w) {\n        return adj_v[i];\n      }\n    }\n\n    return null;\n  };\n\n  FlowNetwork.prototype.addEdge = function (e) {\n    var v = e.from();\n    this.adjList[v].push(e);\n    var w = e.other(v);\n    this.adjList[w].push(e);\n  };\n\n  FlowNetwork.prototype.adj = function (v) {\n    return this.adjList[v];\n  };\n\n  jss.FlowNetwork = FlowNetwork;\n\n  var DepthFirstSearch = function (G, s) {\n    this.s = s;\n    var V = G.V;\n    this.marked = [];\n    this.edgeTo = [];\n\n    for (var v = 0; v < V; ++v) {\n      this.marked.push(false);\n      this.edgeTo.push(-1);\n    }\n\n    this.dfs(G, s);\n  };\n\n  DepthFirstSearch.prototype.dfs = function (G, v) {\n    this.marked[v] = true;\n    var adj_v = G.adj(v);\n\n    for (var i = 0; i < adj_v.length; ++i) {\n      var w = adj_v[i];\n\n      if (!this.marked[w]) {\n        this.edgeTo[w] = v;\n        this.dfs(G, w);\n      }\n    }\n  };\n\n  DepthFirstSearch.prototype.hasPathTo = function (v) {\n    return this.marked[v];\n  };\n\n  DepthFirstSearch.prototype.pathTo = function (v) {\n    var path = new jss.Stack();\n    if (v == this.s) return [v];\n\n    for (var x = v; x != this.s; x = this.edgeTo[x]) {\n      path.push(x);\n    }\n\n    path.push(this.s);\n    return path.toArray();\n  };\n\n  jss.DepthFirstSearch = DepthFirstSearch;\n\n  var BreadthFirstSearch = function (G, s) {\n    var V = G.V;\n    this.s = s;\n    var queue = new jss.Queue();\n    queue.enqueue(s);\n    this.marked = [];\n    this.edgeTo = [];\n\n    for (var v = 0; v < V; ++v) {\n      this.marked.push(false);\n      this.edgeTo.push(-1);\n    }\n\n    while (!queue.isEmpty()) {\n      var v = queue.dequeue();\n      this.marked[v] = true;\n      var adj_v = G.adj(v);\n\n      for (var i = 0; i < adj_v.length; ++i) {\n        var w = adj_v[i];\n\n        if (!this.marked[w]) {\n          this.edgeTo[w] = v;\n          queue.enqueue(w);\n        }\n      }\n    }\n  };\n\n  BreadthFirstSearch.prototype.hasPathTo = function (v) {\n    return this.marked[v];\n  };\n\n  BreadthFirstSearch.prototype.pathTo = function (v) {\n    var path = new jss.Stack();\n    if (v == this.s) return [v];\n\n    for (var x = v; x != this.s; x = this.edgeTo[x]) {\n      path.push(x);\n    }\n\n    path.push(this.s);\n    return path.toArray();\n  };\n\n  jss.BreadthFirstSearch = BreadthFirstSearch;\n\n  var ConnectedComponents = function (G) {\n    this.count = 0;\n    var V = G.V;\n    this.marked = [];\n    this.id = [];\n\n    for (var v = 0; v < V; ++v) {\n      this.marked.push(false);\n      this.id.push(-1);\n    }\n\n    for (var v = 0; v < V; ++v) {\n      if (!this.marked[v]) {\n        this.dfs(G, v);\n        this.count++;\n      }\n    }\n  };\n\n  ConnectedComponents.prototype.dfs = function (G, v) {\n    this.marked[v] = true;\n    this.id[v] = this.count;\n    var adj_v = G.adj(v);\n\n    for (var i = 0; i < adj_v.length; ++i) {\n      var w = adj_v[i];\n\n      if (!this.marked[w]) {\n        this.dfs(G, w);\n      }\n    }\n  };\n\n  ConnectedComponents.prototype.componentId = function (v) {\n    return this.id[v];\n  };\n\n  ConnectedComponents.prototype.componentCount = function () {\n    return this.count;\n  };\n\n  jss.ConnectedComponents = ConnectedComponents;\n\n  var TopologicalSort = function (G) {\n    this.postOrder = new jss.Stack();\n    this.marked = [];\n    var V = G.V;\n\n    for (var v = 0; v < V; ++v) {\n      this.marked.push(false);\n    }\n\n    for (var v = 0; v < V; ++v) {\n      if (!this.marked[v]) {\n        this.dfs(G, v);\n      }\n    }\n  };\n\n  TopologicalSort.prototype.dfs = function (G, v) {\n    this.marked[v] = true;\n    var adj_v = G.adj(v);\n\n    for (var i = 0; i < adj_v.length; ++i) {\n      var w = adj_v[i];\n\n      if (!this.marked[w]) {\n        this.dfs(G, w);\n      }\n    }\n\n    this.postOrder.push(v);\n  };\n\n  TopologicalSort.prototype.order = function () {\n    return this.postOrder.toArray();\n  };\n\n  jss.TopologicalSort = TopologicalSort;\n\n  var StronglyConnectedComponents = function (G) {\n    var V = G.V;\n    this.count = 0;\n    this.marked = [];\n    this.id = [];\n\n    for (var v = 0; v < V; ++v) {\n      this.marked.push(false);\n      this.id.push(-1);\n    }\n\n    var order = new jss.TopologicalSort(G.reverse()).order();\n\n    for (var i = 0; i < order.length; ++i) {\n      var v = order[i];\n\n      if (!this.marked[v]) {\n        this.dfs(G, v);\n        this.count++;\n      }\n    }\n  };\n\n  StronglyConnectedComponents.prototype.dfs = function (G, v) {\n    this.marked[v] = true;\n    this.id[v] = this.count;\n    var adj_v = G.adj(v);\n\n    for (var i = 0; i < adj_v.length; ++i) {\n      var w = adj_v[i];\n\n      if (!this.marked[w]) {\n        this.dfs(G, w);\n      }\n    }\n  };\n\n  StronglyConnectedComponents.prototype.componentId = function (v) {\n    return this.id[v];\n  };\n\n  StronglyConnectedComponents.prototype.componentCount = function () {\n    return this.count;\n  };\n\n  jss.StronglyConnectedComponents = StronglyConnectedComponents;\n\n  var KruskalMST = function (G) {\n    var V = G.V;\n    var pq = new jss.MinPQ(function (e1, e2) {\n      return e1.weight - e2.weight;\n    });\n\n    for (var v = 0; v < G.V; ++v) {\n      var adj_v = G.adj(v);\n\n      for (var i = 0; i < adj_v.length; ++i) {\n        var e = adj_v[i];\n\n        if (e.either() != v) {\n          continue;\n        }\n\n        pq.enqueue(e);\n      }\n    }\n\n    this.mst = [];\n    var uf = new jss.QuickUnion(V);\n\n    while (!pq.isEmpty() && this.mst.length < V - 1) {\n      var e = pq.delMin();\n      var v = e.either();\n      var w = e.other(v);\n\n      if (!uf.connected(v, w)) {\n        uf.union(v, w);\n        this.mst.push(e);\n      }\n    }\n  };\n\n  jss.KruskalMST = KruskalMST;\n\n  var LazyPrimMST = function (G) {\n    var V = G.V;\n    this.marked = [];\n\n    for (var v = 0; v < V; ++v) {\n      this.marked.push(false);\n    }\n\n    this.pq = new jss.MinPQ(function (e1, e2) {\n      return e1.weight - e2.weight;\n    });\n    this.mst = [];\n    this.visit(G, 0);\n\n    while (!this.pq.isEmpty() && this.mst.length < V - 1) {\n      var e = this.pq.delMin();\n      var v = e.either();\n      var w = e.other(v);\n      if (this.marked[v] && this.marked[w]) continue;\n      this.mst.push(e);\n      if (!this.marked[v]) this.visit(G, v);\n      if (!this.marked[w]) this.visit(G, w);\n    }\n  };\n\n  LazyPrimMST.prototype.visit = function (G, v) {\n    this.marked[v] = true;\n    var adj_v = G.adj(v);\n\n    for (var i = 0; i < adj_v.length; ++i) {\n      var e = adj_v[i];\n\n      if (!this.marked[e.other(v)]) {\n        this.pq.enqueue(e);\n      }\n    }\n  };\n\n  jss.LazyPrimMST = LazyPrimMST;\n\n  var EagerPrimMST = function (G) {\n    var V = G.V;\n    this.pq = new jss.IndexMinPQ(V, function (e1, e2) {\n      return e1.weight - e2.weight;\n    });\n    this.marked = [];\n\n    for (var v = 0; v < V; ++v) {\n      this.marked.push(false);\n    }\n\n    this.mst = [];\n    this.visit(G, 0);\n\n    while (!this.pq.isEmpty()) {\n      var e = this.pq.minKey();\n      var w = this.pq.delMin();\n      this.mst.push(e);\n\n      if (!this.marked[w]) {\n        this.visit(G, w);\n      }\n    }\n  };\n\n  EagerPrimMST.prototype.visit = function (G, v) {\n    this.marked[v] = true;\n    var adj_v = G.adj(v);\n\n    for (var i = 0; i < adj_v.length; ++i) {\n      var e = adj_v[i];\n      var w = e.other(v);\n      if (this.marked[w]) continue;\n\n      if (this.pq.containsIndex(w)) {\n        this.pq.decreaseKey(w, e);\n      } else {\n        this.pq.insert(w, e);\n      }\n    }\n  };\n\n  jss.EagerPrimMST = EagerPrimMST;\n\n  var Dijkstra = function (G, s) {\n    var V = G.V;\n    this.s = s;\n    this.marked = [];\n    this.edgeTo = [];\n    this.cost = [];\n    this.pq = new jss.IndexMinPQ(V, function (cost1, cost2) {\n      return cost1, cost2;\n    });\n\n    for (var v = 0; v < V; ++v) {\n      this.marked.push(false);\n      this.edgeTo.push(null);\n      this.cost.push(Number.MAX_VALUE);\n    }\n\n    this.cost[s] = 0;\n    this.pq.insert(s, this.cost[s]);\n\n    while (!this.pq.isEmpty()) {\n      var v = this.pq.delMin();\n      this.marked[v] = true;\n      var adj_v = G.adj(v);\n\n      for (var i = 0; i < adj_v.length; ++i) {\n        var e = adj_v[i];\n        this.relax(e);\n      }\n    }\n  };\n\n  Dijkstra.prototype.relax = function (e) {\n    var v = e.from();\n    var w = e.to();\n\n    if (this.cost[w] > this.cost[v] + e.weight) {\n      this.cost[w] = this.cost[v] + e.weight;\n      this.edgeTo[w] = e;\n\n      if (this.pq.containsIndex(w)) {\n        this.pq.decreaseKey(w, this.cost[w]);\n      } else {\n        this.pq.insert(w, this.cost[w]);\n      }\n    }\n  };\n\n  Dijkstra.prototype.hasPathTo = function (v) {\n    return this.marked[v];\n  };\n\n  Dijkstra.prototype.pathTo = function (v) {\n    var path = new jss.Stack();\n\n    for (var x = v; x != this.s; x = this.edgeTo[x].other(x)) {\n      path.push(this.edgeTo[x]);\n    }\n\n    return path.toArray();\n  };\n\n  Dijkstra.prototype.distanceTo = function (v) {\n    return this.cost[v];\n  };\n\n  jss.Dijkstra = Dijkstra;\n\n  var BellmanFord = function (G, s) {\n    var V = G.V;\n    this.s = s;\n    this.marked = [];\n    this.edgeTo = [];\n    this.cost = [];\n\n    for (var v = 0; v < V; ++v) {\n      this.marked.push(false);\n      this.edgeTo.push(null);\n      this.cost.push(Number.MAX_VALUE);\n    }\n\n    this.cost[s] = 0;\n    this.marked[s] = true;\n\n    for (var j = 0; j < V; ++j) {\n      for (var v = 0; v < V; ++v) {\n        var adj_v = G.adj(v);\n\n        for (var i = 0; i < adj_v.length; ++i) {\n          var e = adj_v[i];\n          this.relax(e);\n        }\n      }\n    }\n  };\n\n  BellmanFord.prototype.relax = function (e) {\n    var v = e.from();\n    var w = e.to();\n\n    if (this.cost[w] > this.cost[v] + e.weight) {\n      this.cost[w] = this.cost[v] + e.weight;\n      this.marked[w] = true;\n      this.edgeTo[w] = e;\n    }\n  };\n\n  BellmanFord.prototype.hasPathTo = function (v) {\n    return this.marked[v];\n  };\n\n  BellmanFord.prototype.pathTo = function (v) {\n    var path = new jss.Stack();\n\n    for (var x = v; x != this.s; x = this.edgeTo[x].other(x)) {\n      path.push(this.edgeTo[x]);\n    }\n\n    return path.toArray();\n  };\n\n  BellmanFord.prototype.distanceTo = function (v) {\n    return this.cost[v];\n  };\n\n  jss.BellmanFord = BellmanFord;\n\n  var TopologicalSortShortestPaths = function (G, s) {\n    var V = G.V;\n    this.s = s;\n    this.marked = [];\n    this.edgeTo = [];\n    this.cost = [];\n\n    for (var v = 0; v < V; ++v) {\n      this.marked.push(false);\n      this.edgeTo.push(null);\n      this.cost.push(Number.MAX_VALUE);\n    }\n\n    this.cost[s] = 0;\n    this.marked[s] = true;\n    var order = new jss.TopologicalSort(G.toDiGraph()).order();\n\n    for (var j = 0; j < order.length; ++j) {\n      var v = order[j];\n      var adj_v = G.adj(v);\n\n      for (var i = 0; i < adj_v.length; ++i) {\n        var e = adj_v[i];\n        this.relax(e);\n      }\n    }\n  };\n\n  TopologicalSortShortestPaths.prototype.relax = function (e) {\n    var v = e.from();\n    var w = e.to();\n\n    if (this.cost[w] > this.cost[v] + e.weight) {\n      this.cost[w] = this.cost[v] + e.weight;\n      this.marked[w] = true;\n      this.edgeTo[w] = e;\n    }\n  };\n\n  TopologicalSortShortestPaths.prototype.hasPathTo = function (v) {\n    return this.marked[v];\n  };\n\n  TopologicalSortShortestPaths.prototype.pathTo = function (v) {\n    var path = new jss.Stack();\n\n    for (var x = v; x != this.s; x = this.edgeTo[x].other(x)) {\n      path.push(this.edgeTo[x]);\n    }\n\n    return path.toArray();\n  };\n\n  TopologicalSortShortestPaths.prototype.distanceTo = function (v) {\n    return this.cost[v];\n  };\n\n  jss.TopologicalSortShortestPaths = TopologicalSortShortestPaths;\n\n  var FordFulkerson = function (G, s, t) {\n    this.value = 0;\n    var V = G.V;\n    var bottle = Number.MAX_VALUE;\n    this.marked = null;\n    this.edgeTo = null;\n    this.s = s;\n    this.t = t;\n\n    while (this.hasAugmentedPath(G)) {\n      for (var x = this.t; x != this.s; x = this.edgeTo[x].other(x)) {\n        bottle = Math.min(bottle, this.edgeTo[x].residualCapacityTo(x));\n      }\n\n      for (var x = this.t; x != this.s; x = this.edgeTo[x].other(x)) {\n        this.edgeTo[x].addResidualFlowTo(x, bottle);\n      }\n\n      this.value += bottle;\n    }\n  };\n\n  FordFulkerson.prototype.hasAugmentedPath = function (G) {\n    var V = G.V;\n    this.marked = [];\n    this.edgeTo = [];\n\n    for (var v = 0; v < V; ++v) {\n      this.marked.push(false);\n      this.edgeTo.push(null);\n    }\n\n    var queue = new jss.Queue();\n    queue.enqueue(this.s);\n    this.marked[this.s] = true;\n\n    while (!queue.isEmpty()) {\n      var v = queue.dequeue();\n      var adj_v = G.adj(v);\n\n      for (var i = 0; i < adj_v.length; ++i) {\n        var e = adj_v[i];\n        var w = e.other(v);\n\n        if (!this.marked[w] && e.residualCapacityTo(w) > 0) {\n          this.edgeTo[w] = e;\n          this.marked[w] = true;\n\n          if (w == this.t) {\n            return true;\n          }\n\n          queue.enqueue(w);\n        }\n      }\n    }\n\n    return false;\n  };\n\n  FordFulkerson.prototype.minCut = function (G) {\n    var cuts = [];\n    var V = G.V;\n\n    for (var v = 0; v < V; ++v) {\n      var adj_v = G.adj(v);\n\n      for (var i = 0; i < adj_v.length; ++i) {\n        var e = adj_v[i];\n\n        if (e.from() == v && e.residualCapacityTo(e.other(v)) == 0) {\n          cuts.push(e);\n        }\n      }\n    }\n\n    return cuts;\n  };\n\n  jss.FordFulkerson = FordFulkerson;\n})(jsgraphs);\n\nvar module = module || {};\n\nif (module) {\n  module.exports = jsgraphs;\n}","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/GreedyAssignment/assignment/node_modules/js-graph-algorithms/src/jsgraphs.js"],"names":["jsgraphs","jss","less","a1","a2","compare","exchange","a","i","j","temp","StackNode","value","next","Stack","N","first","prototype","push","_push","x","oldX","pop","undefined","oldFirst","item","size","isEmpty","peep","toArray","result","QueueNode","Queue","last","enqueue","oldLast","dequeue","MinPQ","s","lengh","swim","k","parent","Math","floor","delMin","sink","child","QuickUnion","V","id","v","union","w","q","root","p","connected","IndexMinPQ","keys","pq","qp","insert","index","key","decreaseKey","minKey","min","containsIndex","Graph","adjList","nodeInfo","edges","addEdge","edge_id","Edge","adj","node","edge","DiGraph","reverse","g","adj_v","length","weight","either","other","from","to","WeightedGraph","e","WeightedDiGraph","call","Object","create","toDiGraph","FlowEdge","capacity","flow","residualCapacityTo","addResidualFlowTo","deltaFlow","FlowNetwork","DepthFirstSearch","G","marked","edgeTo","dfs","hasPathTo","pathTo","path","BreadthFirstSearch","queue","ConnectedComponents","count","componentId","componentCount","TopologicalSort","postOrder","order","StronglyConnectedComponents","KruskalMST","e1","e2","mst","uf","LazyPrimMST","visit","EagerPrimMST","Dijkstra","cost","cost1","cost2","Number","MAX_VALUE","relax","distanceTo","BellmanFord","TopologicalSortShortestPaths","FordFulkerson","t","bottle","hasAugmentedPath","minCut","cuts","module","exports"],"mappings":"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","sourcesContent":["var jsgraphs = jsgraphs || {};\r\n\r\n(function(jss){\r\n    \r\n    jss.less = function(a1, a2, compare) {\r\n        return compare(a1, a2) < 0;\r\n    };\r\n    \r\n    jss.exchange = function(a, i, j) {\r\n        var temp = a[i];\r\n        a[i] = a[j];\r\n        a[j] = temp;\r\n    };\r\n    \r\n    var StackNode = function (value) {\r\n        this.value = value;\r\n        this.next = null;\r\n    };\r\n    \r\n    jss.StackNode = StackNode;\r\n    \r\n    var Stack = function() {\r\n        this.N = 0;\r\n        this.first = null;\r\n    };\r\n    \r\n    Stack.prototype.push = function (a) {\r\n        this.first = this._push(this.first, a);  \r\n    };\r\n    \r\n    Stack.prototype._push = function(x, a) {\r\n        if(x == null) {\r\n            this.N++;\r\n            return new jss.StackNode(a);\r\n        }  \r\n        var oldX = x;\r\n        this.N++;\r\n        x = new jss.StackNode(a);\r\n        x.next = oldX;\r\n        return x;\r\n    };\r\n    \r\n    Stack.prototype.pop = function () {\r\n        if (this.first == null) {\r\n            return undefined;\r\n        }  \r\n        \r\n        var oldFirst = this.first;\r\n        var item = oldFirst.value;\r\n        this.first = oldFirst.next;\r\n        this.N--;\r\n        \r\n        return item;\r\n    };\r\n    \r\n    Stack.prototype.size = function() {\r\n        return this.N;  \r\n    };\r\n    \r\n    Stack.prototype.isEmpty = function() {\r\n        return this.N == 0;  \r\n    };\r\n    \r\n    Stack.prototype.peep = function() {\r\n        if (this.first == null) {\r\n            return undefined;\r\n        }  \r\n        \r\n        return this.first.value;\r\n    };\r\n    \r\n    Stack.prototype.toArray = function() {\r\n        var result = [];\r\n        x = this.first;\r\n        while (x != null) {\r\n            result.push(x.value);\r\n            x = x.next;\r\n        }\r\n        return result;\r\n    };\r\n    \r\n    jss.Stack = Stack;\r\n    \r\n    var QueueNode = function(a) {\r\n        this.value = a;  \r\n        this.next = null;\r\n    };\r\n    \r\n    jss.QueueNode = QueueNode;\r\n    \r\n    var Queue = function() {\r\n        this.first = null;\r\n        this.last = null;\r\n        this.N = 0;\r\n    };\r\n    \r\n    Queue.prototype.enqueue = function(item) {\r\n        var oldLast = this.last;\r\n        this.last = new jss.QueueNode(item);\r\n        if(oldLast != null){\r\n            oldLast.next = this.last;\r\n        }\r\n        if (this.first == null) {\r\n            this.first = this.last;\r\n        }\r\n        this.N++;\r\n    };\r\n    \r\n    Queue.prototype.dequeue = function() {\r\n        if(this.first == null) {\r\n            return undefined;\r\n        }  \r\n        \r\n        var oldFirst = this.first;\r\n        var item = oldFirst.value;\r\n        this.first = oldFirst.next;\r\n        \r\n        if(this.first == null) {\r\n            this.last = null;\r\n        }\r\n        \r\n        this.N--;\r\n        \r\n        return item;\r\n    };\r\n    \r\n    Queue.prototype.size = function() {\r\n        return this.N;  \r\n    };\r\n    \r\n    Queue.prototype.isEmpty = function() {\r\n        return this.N == 0;\r\n    };\r\n    \r\n    Queue.prototype.toArray = function() {\r\n        var result = [];\r\n        var x = this.first;\r\n        while (x != null) {\r\n            result.push(x.value);\r\n            x = x.next;\r\n        }\r\n        return result;\r\n    };\r\n    \r\n    jss.Queue = Queue;\r\n    \r\n    var MinPQ = function(compare) {\r\n        this.s = [];\r\n        this.N = 0;\r\n        if(!compare) {\r\n            compare = function(a1, a2) {\r\n                return a1 - a2;\r\n            };\r\n        }\r\n        this.compare = compare;\r\n    };\r\n    \r\n    MinPQ.prototype.enqueue = function(item) {\r\n        while(this.s.lengh <= this.N+1) {\r\n            this.s.push(0);\r\n        }   \r\n        this.s[++this.N] = item;\r\n        this.swim(this.N);\r\n    };\r\n    \r\n    MinPQ.prototype.swim = function(k) {\r\n        while (k > 1){\r\n            var parent = Math.floor(k / 2);\r\n            if(jss.less(this.s[k], this.s[parent], this.compare)){\r\n                jss.exchange(this.s, k, parent);\r\n                k = parent;\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n    \r\n    MinPQ.prototype.delMin = function() {\r\n        if(this.N == 0) {\r\n            return undefined;\r\n        }  \r\n        \r\n        var item = this.s[1];\r\n        jss.exchange(this.s, 1, this.N--);\r\n        this.sink(1);\r\n        return item;\r\n    };\r\n    \r\n    MinPQ.prototype.sink = function(k) {\r\n        while(k * 2 <= this.N) {\r\n            var child = 2 * k;\r\n            if(child < this.N && jss.less(this.s[child+1], this.s[child], this.compare)){\r\n                child++;\r\n            }\r\n            if(jss.less(this.s[child], this.s[k], this.compare)){\r\n                jss.exchange(this.s, child, k);\r\n                k = child;\r\n            } else {\r\n                break;\r\n            }\r\n        }  \r\n    };\r\n    \r\n    MinPQ.prototype.size = function(){\r\n        return this.N;\r\n    };\r\n    \r\n    MinPQ.prototype.isEmpty = function() {\r\n        return this.N == 0;\r\n    };\r\n    \r\n    jss.MinPQ = MinPQ;\r\n    \r\n    var QuickUnion = function(V) {\r\n        this.id = [];\r\n        for (var v = 0; v < V; ++v) {\r\n            this.id.push(v);\r\n        }\r\n    };\r\n    \r\n    QuickUnion.prototype.union = function(v, w) {\r\n        var q = this.root(v);\r\n        var p = this.root(w);\r\n        \r\n        if(p != q) {\r\n            this.id[p] = q;\r\n        }\r\n    };\r\n    \r\n    QuickUnion.prototype.root = function(q) {\r\n        while(this.id[q] != q) {\r\n            q = this.id[q];\r\n        }  \r\n        return q;\r\n    };\r\n    \r\n    QuickUnion.prototype.connected = function(v, w) {\r\n        return this.root(v) == this.root(w);  \r\n    };\r\n    \r\n    jss.QuickUnion = QuickUnion;\r\n    \r\n    var IndexMinPQ = function(N, compare) {\r\n        this.keys = [];\r\n        this.pq = [];\r\n        this.qp = []; // positions of key in pq\r\n        for(var i = 0; i <= N; ++i) {\r\n            this.keys.push(null);\r\n            this.pq.push(0);\r\n            this.qp.push(-1);\r\n        }\r\n        this.N = 0;\r\n        \r\n        if(!compare) {\r\n            compare = function(a1, a2) {\r\n                return a1 - a2;  \r\n            };\r\n        } \r\n        this.compare = compare;\r\n    };\r\n    \r\n    IndexMinPQ.prototype.insert = function (index, key) {\r\n        this.keys[index] = key;\r\n        \r\n        this.pq[++this.N] = index;\r\n        this.qp[index] = this.N;\r\n        this.swim(this.N);\r\n    };\r\n    \r\n    IndexMinPQ.prototype.decreaseKey = function(index, key) {\r\n        if(jss.less(key, this.keys[index], this.compare)){\r\n            this.keys[index] = key;\r\n            this.swim(this.qp[index]);\r\n        }\r\n    };\r\n    \r\n    IndexMinPQ.prototype.minKey = function() {\r\n        return this.keys[this.pq[1]];  \r\n    };\r\n    \r\n    IndexMinPQ.prototype.min = function() {\r\n        return this.pq[1];  \r\n    };\r\n    \r\n    IndexMinPQ.prototype.delMin = function() {\r\n        var key = this.pq[1];\r\n        jss.exchange(this.pq, 1, this.N);\r\n        this.qp[this.pq[1]] = 1;\r\n        \r\n        this.qp[this.pq[this.N]] = -1;\r\n        this.keys[this.pq[this.N]] = null;\r\n    \r\n        this.N--;\r\n        \r\n        this.sink(1);\r\n        \r\n        return key;\r\n    };\r\n    \r\n    IndexMinPQ.prototype.swim = function (k) {\r\n        while( k > 1) {\r\n            var parent = Math.floor(k / 2);\r\n            if(jss.less(this.keys[this.pq[k]], this.keys[this.pq[parent]], this.compare)){\r\n                jss.exchange(this.pq, k, parent);\r\n                this.qp[this.pq[k]] = k;\r\n                this.qp[this.pq[parent]] = parent;\r\n                k = parent;\r\n            } else {\r\n                break;\r\n            }\r\n        }  \r\n    };\r\n    \r\n    IndexMinPQ.prototype.sink = function (k) {\r\n        while(2 * k <= this.N) {\r\n            var child = k * 2;\r\n            if(child < this.N && jss.less(this.keys[this.pq[child+1]], this.keys[this.pq[child]], this.compare)){\r\n                child++;\r\n            }\r\n            if(jss.less(this.keys[this.pq[child]], this.keys[this.pq[k]], this.compare)) {\r\n                jss.exchange(this.pq, k, child);\r\n                this.qp[this.pq[k]] = k;\r\n                this.qp[this.pq[child]] = child;\r\n                k = child;\r\n            } else {\r\n                break;\r\n            }\r\n        }  \r\n    };\r\n    \r\n    IndexMinPQ.prototype.containsIndex = function (index) {\r\n        return this.qp[index] != -1;  \r\n    };\r\n    \r\n    IndexMinPQ.prototype.isEmpty = function() {\r\n        return this.N == 0;  \r\n    };\r\n    \r\n    IndexMinPQ.prototype.size = function() {\r\n        return this.N;\r\n    }\r\n    \r\n    jss.IndexMinPQ = IndexMinPQ;\r\n    \r\n\tvar Graph = function (V) {\r\n        this.V = V;\r\n        this.adjList = [];\r\n        this.nodeInfo = [];\r\n        this.edges = {};\r\n        for (var i = 0; i < V; ++i) {\r\n            this.adjList.push([]);\r\n            this.nodeInfo.push({});\r\n        }\r\n    };\r\n    \r\n    Graph.prototype.addEdge = function(v, w){\r\n        this.adjList[v].push(w);\r\n        this.adjList[w].push(v);\r\n        var edge_id = v + '_' + w;\r\n        if(v > w) {\r\n            edge_id = w + '_' + v;\r\n        }\r\n        this.edges[edge_id] = new jss.Edge(v, w, 0);\r\n    };\r\n    \r\n    Graph.prototype.adj = function(v) {\r\n        return this.adjList[v];  \r\n    };\r\n    \r\n    Graph.prototype.node = function(v) {\r\n        return this.nodeInfo[v];  \r\n    };\r\n    \r\n    Graph.prototype.edge = function(v, w) {\r\n        var edge_id = v + '_' + w;\r\n        if(v > w) {\r\n            edge_id = w + '_' + v;\r\n        }\r\n        if (edge_id in this.edges) {\r\n            return this.edges[edge_id];\r\n        }\r\n        return null;\r\n    };\r\n    \r\n    jss.Graph = Graph;\r\n    \r\n    var DiGraph = function(V) {\r\n        this.V = V;\r\n        this.adjList = [];\r\n        this.nodeInfo = [];\r\n        this.edges = {};\r\n        for (var v = 0; v < V; ++v){\r\n            this.adjList.push([]);\r\n            this.nodeInfo.push({});\r\n        }\r\n    };\r\n    \r\n    DiGraph.prototype.addEdge = function(v, w){\r\n        this.adjList[v].push(w);\r\n        var edge_id = v + '_' + w;\r\n        this.edges[edge_id] = new jss.Edge(v, w, 0);\r\n    };\r\n    \r\n    DiGraph.prototype.edge = function(v, w) {\r\n        var edge_id = v + '_' + w;\r\n        if(edge_id in this.edges) {\r\n            return this.edges[edge_id];\r\n        } else {\r\n            return null;\r\n        }\r\n    };\r\n    \r\n    DiGraph.prototype.adj = function(v) {\r\n        return this.adjList[v];  \r\n    };\r\n    \r\n    DiGraph.prototype.node = function(v) {\r\n        return this.nodeInfo[v];  \r\n    };\r\n    \r\n    DiGraph.prototype.reverse = function(){\r\n        var g = new DiGraph(this.V);\r\n        for (var v = 0; v < this.V; ++v) {\r\n            var adj_v = this.adjList[v];\r\n            for (var i = 0; i < adj_v.length; ++i){\r\n                var w = adj_v[i];\r\n                g.addEdge(w, v);\r\n            }\r\n        }\r\n        return g;\r\n    };\r\n    \r\n    jss.DiGraph = DiGraph;\r\n    \r\n    var Edge = function(v, w, weight) {\r\n        this.v = v;\r\n        this.w = w;\r\n        this.weight = weight;\r\n    };\r\n    \r\n    Edge.prototype.either = function() {\r\n        return this.v;\r\n    };\r\n    \r\n    Edge.prototype.other = function(x) {\r\n        return x == this.v ? this.w : this.v;\r\n    };\r\n    \r\n    Edge.prototype.from = function() {\r\n        return this.v;\r\n    };\r\n    \r\n    Edge.prototype.to = function() {\r\n        return this.w;\r\n    };\r\n    \r\n    jss.Edge = Edge;\r\n    \r\n    var WeightedGraph = function(V) {\r\n        this.V = V;\r\n        this.adjList = [];\r\n        this.nodeInfo = [];\r\n        \r\n        for ( var v = 0; v < V; ++v) {\r\n            this.adjList.push([]);\r\n            this.nodeInfo.push({});\r\n        }\r\n    };\r\n    \r\n    WeightedGraph.prototype.adj = function(v) {\r\n        return this.adjList[v];  \r\n    };\r\n    \r\n    WeightedGraph.prototype.edge = function(v, w) {\r\n        var adj_v = this.adjList[v];\r\n        for(var i=0; i < adj_v.length; ++i) {\r\n            var x = adj_v[i].other(v);\r\n            if(x == w) {\r\n                return adj_v[i];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    \r\n    WeightedGraph.prototype.node = function(v) {\r\n        return this.nodeInfo[v];  \r\n    };\r\n    \r\n    WeightedGraph.prototype.addEdge = function(e) {\r\n        var v = e.either();\r\n        var w = e.other(v);\r\n        this.adjList[v].push(e);\r\n        this.adjList[w].push(e);\r\n    };\r\n    \r\n    jss.WeightedGraph = WeightedGraph;\r\n    \r\n    var WeightedDiGraph = function(V) {\r\n        WeightedGraph.call(this, V);\r\n    };\r\n    \r\n    WeightedDiGraph.prototype = Object.create(jss.WeightedGraph.prototype);\r\n    \r\n    WeightedDiGraph.prototype.addEdge = function(e) {\r\n        var v = e.from();\r\n        this.adjList[v].push(e);\r\n    };\r\n    \r\n    WeightedDiGraph.prototype.edge = function(v, w) {\r\n        var adj_v = this.adjList[v];\r\n        for(var i=0; i < adj_v.length; ++i) {\r\n            var x = adj_v[i].other(v);\r\n            if(x == w) {\r\n                return adj_v[i];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    \r\n    WeightedDiGraph.prototype.toDiGraph = function() {\r\n        var g = new jss.DiGraph(this.V);\r\n        for(var v = 0; v < this.V; ++v) {\r\n            var adj_v = this.adjList[v];\r\n            for (var i =0; i < adj_v.length; ++i) {\r\n                var e = adj_v[i];\r\n                var w = e.other(v);\r\n                g.addEdge(v, w);\r\n            }\r\n        }\r\n        return g;\r\n    };\r\n    \r\n    jss.WeightedDiGraph = WeightedDiGraph;\r\n    \r\n    var FlowEdge = function(v, w, capacity) {\r\n        this.v = v;\r\n        this.w = w;\r\n        this.capacity = capacity;\r\n        this.flow = 0;\r\n    };\r\n    \r\n    FlowEdge.prototype.residualCapacityTo = function (x) {\r\n        if(x == this.v) {\r\n            return this.flow;\r\n        } else {\r\n            return this.capacity - this.flow;\r\n        }\r\n    };\r\n    \r\n    FlowEdge.prototype.addResidualFlowTo = function (x, deltaFlow) {\r\n        if(x == this.v) {\r\n            this.flow -= deltaFlow;\r\n        } else if(x == this.w) {\r\n            this.flow += deltaFlow;\r\n        }\r\n    };\r\n    \r\n    FlowEdge.prototype.from = function() {\r\n        return this.v;\r\n    };\r\n    \r\n    FlowEdge.prototype.to = function() {\r\n        return this.w;\r\n    };\r\n    \r\n    FlowEdge.prototype.other = function(x) {\r\n        return x == this.v ? this.w : this.v;\r\n    }\r\n    \r\n    \r\n    jss.FlowEdge = FlowEdge;\r\n    \r\n    var FlowNetwork = function(V) {\r\n        this.V = V;\r\n        this.adjList = [];\r\n        this.nodeInfo = [];\r\n        for(var v = 0; v < V; ++v) {\r\n            this.adjList.push([]);\r\n            this.nodeInfo.push({});\r\n        }\r\n    };\r\n    \r\n    FlowNetwork.prototype.node = function(v) {\r\n        return this.nodeInfo[v];\r\n    };\r\n    \r\n    FlowNetwork.prototype.edge = function(v, w) {\r\n        var adj_v = this.adjList[v];\r\n        for(var i=0; i < adj_v.length; ++i) {\r\n            var x = adj_v[i].other(v);\r\n            if(x == w) {\r\n                return adj_v[i];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    \r\n    FlowNetwork.prototype.addEdge = function(e) {\r\n        var v = e.from();\r\n        this.adjList[v].push(e);\r\n        var w = e.other(v);\r\n        this.adjList[w].push(e);\r\n    };\r\n    \r\n    FlowNetwork.prototype.adj = function(v) {\r\n        return this.adjList[v];  \r\n    };\r\n    \r\n    jss.FlowNetwork = FlowNetwork;\r\n    \r\n    var DepthFirstSearch = function(G, s) {\r\n        this.s = s;\r\n        var V = G.V;\r\n        this.marked = [];\r\n        this.edgeTo = [];\r\n        for (var v = 0; v < V; ++v) {\r\n            this.marked.push(false);\r\n            this.edgeTo.push(-1);\r\n        }\r\n        \r\n        this.dfs(G, s);\r\n    };\r\n    \r\n    DepthFirstSearch.prototype.dfs = function (G, v) {\r\n        this.marked[v] = true;\r\n        var adj_v = G.adj(v);\r\n        for (var i = 0; i < adj_v.length; ++i){\r\n            var w = adj_v[i];\r\n            if (!this.marked[w]){\r\n                this.edgeTo[w] = v;\r\n                this.dfs(G, w);\r\n            }\r\n        }\r\n    };\r\n    \r\n    DepthFirstSearch.prototype.hasPathTo = function(v) {\r\n        return this.marked[v];\r\n    };\r\n    \r\n    DepthFirstSearch.prototype.pathTo = function(v) {\r\n        var path = new jss.Stack();\r\n        if(v == this.s) return [v];\r\n        \r\n        for(var x = v; x != this.s; x = this.edgeTo[x]) {\r\n            path.push(x);\r\n        }\r\n        path.push(this.s);\r\n        return path.toArray();\r\n    };\r\n    \r\n    jss.DepthFirstSearch = DepthFirstSearch;\r\n    \r\n    var BreadthFirstSearch = function(G, s) {\r\n        var V = G.V;\r\n        this.s = s;\r\n        \r\n        var queue = new jss.Queue();\r\n        queue.enqueue(s);\r\n        this.marked = [];\r\n        this.edgeTo = [];\r\n        \r\n        for(var v = 0; v < V; ++v) {\r\n            this.marked.push(false);\r\n            this.edgeTo.push(-1);\r\n        }\r\n        \r\n        while (!queue.isEmpty()) {\r\n            var v = queue.dequeue();\r\n            this.marked[v] = true;\r\n            var adj_v = G.adj(v);\r\n            for (var i = 0; i < adj_v.length; ++i) {\r\n                var w = adj_v[i];\r\n                if(!this.marked[w]){\r\n                    this.edgeTo[w] = v;\r\n                    queue.enqueue(w);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    BreadthFirstSearch.prototype.hasPathTo = function(v) {\r\n        return this.marked[v];\r\n    };\r\n    \r\n    BreadthFirstSearch.prototype.pathTo = function(v) {\r\n        var path = new jss.Stack();\r\n        if(v == this.s) return [v];\r\n        \r\n        for(var x = v; x != this.s; x = this.edgeTo[x]) {\r\n            path.push(x);\r\n        }\r\n        path.push(this.s);\r\n        return path.toArray();\r\n    };\r\n    \r\n    jss.BreadthFirstSearch = BreadthFirstSearch;\r\n    \r\n    var ConnectedComponents = function(G) {\r\n        this.count = 0;\r\n        var V = G.V;\r\n        this.marked = [];\r\n        this.id = [];\r\n        for (var v = 0; v < V; ++v) {\r\n            this.marked.push(false);\r\n            this.id.push(-1);\r\n        }\r\n        \r\n        for (var v = 0; v < V; ++v) {\r\n            if(!this.marked[v]){\r\n                this.dfs(G, v);\r\n                this.count++;\r\n            }\r\n        }\r\n    };\r\n    \r\n    ConnectedComponents.prototype.dfs = function(G, v) {\r\n        this.marked[v] = true;\r\n        this.id[v] = this.count;\r\n        var adj_v = G.adj(v);\r\n        \r\n        for(var i = 0; i < adj_v.length; ++i){\r\n            var w = adj_v[i];\r\n            if(!this.marked[w]){\r\n                this.dfs(G, w);\r\n            }\r\n        }\r\n    };\r\n    \r\n    ConnectedComponents.prototype.componentId = function(v) {\r\n        return this.id[v];\r\n    };\r\n    \r\n    ConnectedComponents.prototype.componentCount = function(){\r\n        return this.count;\r\n    };\r\n    \r\n    \r\n    jss.ConnectedComponents = ConnectedComponents;\r\n    \r\n    var TopologicalSort = function(G) {\r\n        this.postOrder = new jss.Stack();\r\n        this.marked = [];\r\n        var V = G.V;\r\n        for (var v = 0; v < V; ++v) {\r\n            this.marked.push(false);\r\n        }\r\n        \r\n        for (var v = 0; v < V; ++v) {\r\n            if(!this.marked[v]) {\r\n                this.dfs(G, v);\r\n            }\r\n        }\r\n    };\r\n    \r\n    TopologicalSort.prototype.dfs = function(G, v) {\r\n        this.marked[v] = true;\r\n        var adj_v = G.adj(v);\r\n        for (var i = 0; i < adj_v.length; ++i) {\r\n            var w = adj_v[i];\r\n            if(!this.marked[w]){\r\n                this.dfs(G, w);\r\n            }\r\n        }\r\n        this.postOrder.push(v);\r\n    };\r\n    \r\n    TopologicalSort.prototype.order = function() {\r\n        return this.postOrder.toArray();  \r\n    };\r\n    \r\n    jss.TopologicalSort = TopologicalSort;\r\n    \r\n    var StronglyConnectedComponents = function(G) {\r\n        var V = G.V;\r\n        this.count = 0;\r\n        this.marked = [];\r\n        this.id = [];\r\n        \r\n        for(var v = 0; v < V; ++v) {\r\n            this.marked.push(false);\r\n            this.id.push(-1);\r\n        }\r\n        \r\n        var order = new jss.TopologicalSort(G.reverse()).order();\r\n        for( var i = 0; i < order.length; ++i) {\r\n            var v = order[i];\r\n            if(!this.marked[v]){\r\n                this.dfs(G, v);\r\n                this.count++;\r\n            }\r\n        }\r\n    };\r\n    \r\n    StronglyConnectedComponents.prototype.dfs = function (G, v) {\r\n        this.marked[v] = true;\r\n        this.id[v] = this.count;\r\n        var adj_v = G.adj(v);\r\n        for (var i = 0; i < adj_v.length; ++i){\r\n            var w = adj_v[i];\r\n            if(!this.marked[w]){\r\n                this.dfs(G, w);\r\n            }\r\n        }\r\n    };\r\n    \r\n    \r\n    StronglyConnectedComponents.prototype.componentId = function(v) {\r\n        return this.id[v];\r\n    };\r\n    \r\n    StronglyConnectedComponents.prototype.componentCount = function(){\r\n        return this.count;\r\n    };\r\n    \r\n    jss.StronglyConnectedComponents = StronglyConnectedComponents;\r\n    \r\n    var KruskalMST = function(G) {\r\n        var V = G.V;\r\n        var pq = new jss.MinPQ(function(e1, e2){\r\n            return e1.weight - e2.weight;\r\n        });\r\n        for(var v = 0; v < G.V; ++v){\r\n            var adj_v = G.adj(v);\r\n            for (var i = 0; i < adj_v.length; ++i) {\r\n                var e = adj_v[i];\r\n                if(e.either() != v) {\r\n                    continue;\r\n                }\r\n                pq.enqueue(e);\r\n            }\r\n        }\r\n        \r\n        this.mst = [];\r\n        \r\n        var uf = new jss.QuickUnion(V);\r\n        while (!pq.isEmpty() && this.mst.length < V-1) {\r\n            var e = pq.delMin();\r\n            var v = e.either();\r\n            var w = e.other(v);\r\n            \r\n            if(!uf.connected(v, w)){\r\n                uf.union(v, w);\r\n                this.mst.push(e);\r\n            }\r\n        }\r\n    };\r\n    \r\n    \r\n    \r\n    jss.KruskalMST = KruskalMST;\r\n    \r\n    var LazyPrimMST = function(G) {\r\n        var V = G.V;\r\n        this.marked = [];\r\n        for( var v = 0; v < V; ++v) {\r\n            this.marked.push(false);\r\n        }\r\n        \r\n        this.pq = new jss.MinPQ(function(e1, e2){\r\n            return e1.weight - e2.weight;\r\n        });\r\n        \r\n        this.mst = [];\r\n        \r\n        this.visit(G, 0);\r\n        \r\n        while(!this.pq.isEmpty() && this.mst.length < V-1) {\r\n            var e = this.pq.delMin();\r\n            var v = e.either();\r\n            var w = e.other(v);\r\n            if(this.marked[v] && this.marked[w]) continue;\r\n            this.mst.push(e);\r\n            if(!this.marked[v]) this.visit(G, v);\r\n            if(!this.marked[w]) this.visit(G, w);\r\n        }\r\n    };\r\n    \r\n    LazyPrimMST.prototype.visit = function(G, v) {\r\n        this.marked[v]  = true;\r\n        var adj_v = G.adj(v);\r\n        for (var i = 0; i < adj_v.length; ++i) {\r\n            var e = adj_v[i];\r\n            if(!this.marked[e.other(v)]){\r\n                this.pq.enqueue(e);\r\n            }\r\n        }\r\n    };\r\n    \r\n    jss.LazyPrimMST = LazyPrimMST;\r\n    \r\n    var EagerPrimMST = function(G) {\r\n        var V = G.V;\r\n        this.pq = new jss.IndexMinPQ(V, function(e1, e2) {\r\n            return e1.weight - e2.weight;\r\n        });\r\n        this.marked = [];\r\n        for(var v = 0; v < V; ++v) {\r\n            this.marked.push(false);\r\n        }\r\n        this.mst = [];\r\n        this.visit(G, 0);\r\n        while(!this.pq.isEmpty()) {\r\n            var e = this.pq.minKey();\r\n            var w = this.pq.delMin();\r\n            \r\n            this.mst.push(e);\r\n            \r\n            if(!this.marked[w]){\r\n                this.visit(G, w);\r\n            }\r\n            \r\n        }\r\n    };\r\n    \r\n    EagerPrimMST.prototype.visit = function(G, v) {\r\n        this.marked[v]  = true;\r\n        var adj_v = G.adj(v);\r\n        for(var i = 0; i < adj_v.length; ++i) {\r\n            var e = adj_v[i];\r\n            var w = e.other(v);\r\n            if(this.marked[w]) continue;\r\n            if(this.pq.containsIndex(w)){\r\n                this.pq.decreaseKey(w, e);\r\n            } else {\r\n                this.pq.insert(w, e);\r\n            }\r\n        }\r\n    };\r\n    \r\n    jss.EagerPrimMST = EagerPrimMST;\r\n    \r\n    var Dijkstra = function(G, s) {\r\n        var V = G.V;\r\n        this.s = s;\r\n        this.marked = [];\r\n        this.edgeTo = [];\r\n        this.cost = [];\r\n        this.pq = new jss.IndexMinPQ(V, function(cost1, cost2){\r\n            return cost1, cost2;\r\n        });\r\n        \r\n        for(var v =0; v < V; ++v){\r\n            this.marked.push(false);\r\n            this.edgeTo.push(null);\r\n            this.cost.push(Number.MAX_VALUE);\r\n        }\r\n        \r\n        this.cost[s] = 0;\r\n        \r\n        this.pq.insert(s, this.cost[s]);\r\n        \r\n        while(!this.pq.isEmpty()) {\r\n            var v = this.pq.delMin();\r\n            this.marked[v] = true;\r\n            var adj_v = G.adj(v);\r\n            for(var i = 0; i < adj_v.length; ++i) {\r\n                var e = adj_v[i];\r\n                this.relax(e);\r\n            }\r\n        }\r\n        \r\n    };\r\n    \r\n        \r\n    \r\n    \r\n    Dijkstra.prototype.relax = function(e) {\r\n        \r\n        var v = e.from();\r\n        var w = e.to();\r\n        \r\n        if(this.cost[w] > this.cost[v] + e.weight) {\r\n            this.cost[w] = this.cost[v] + e.weight;\r\n            this.edgeTo[w] = e;\r\n            if(this.pq.containsIndex(w)){\r\n                this.pq.decreaseKey(w, this.cost[w]);\r\n            } else {\r\n                this.pq.insert(w, this.cost[w]);\r\n            }\r\n        }\r\n    };\r\n    \r\n\r\n    \r\n    Dijkstra.prototype.hasPathTo = function(v) {\r\n        return this.marked[v];  \r\n    };\r\n\r\n    \r\n    Dijkstra.prototype.pathTo = function(v) {\r\n        var path = new jss.Stack();\r\n        for(var x = v; x != this.s; x = this.edgeTo[x].other(x)) {\r\n            path.push(this.edgeTo[x]);\r\n        }  \r\n        return path.toArray();\r\n    };\r\n    \r\n    Dijkstra.prototype.distanceTo = function(v) {\r\n        return this.cost[v];  \r\n    };\r\n    \r\n    \r\n    jss.Dijkstra = Dijkstra;\r\n    \r\n    var BellmanFord = function(G, s) {\r\n        var V = G.V;\r\n        this.s = s;\r\n        this.marked = [];\r\n        this.edgeTo = [];\r\n        this.cost = [];\r\n        \r\n        \r\n        for(var v =0; v < V; ++v){\r\n            this.marked.push(false);\r\n            this.edgeTo.push(null);\r\n            this.cost.push(Number.MAX_VALUE);\r\n        }\r\n        \r\n        this.cost[s] = 0;\r\n        this.marked[s] = true;\r\n        \r\n        for(var j = 0; j < V; ++j) {\r\n            for(var v = 0; v < V; ++v){\r\n                var adj_v = G.adj(v);\r\n                for(var i = 0; i < adj_v.length; ++i) {\r\n                    var e = adj_v[i];\r\n                    this.relax(e);\r\n                }\r\n            }\r\n        }\r\n        \r\n    };\r\n    \r\n    BellmanFord.prototype.relax = function(e) {\r\n        \r\n        var v = e.from();\r\n        var w = e.to();\r\n        \r\n        if(this.cost[w] > this.cost[v] + e.weight) {\r\n            this.cost[w] = this.cost[v] + e.weight;\r\n            this.marked[w] = true;\r\n            this.edgeTo[w] = e;\r\n        }\r\n    };\r\n    \r\n    BellmanFord.prototype.hasPathTo = function(v) {\r\n        return this.marked[v];  \r\n    };\r\n\r\n    \r\n    BellmanFord.prototype.pathTo = function(v) {\r\n        var path = new jss.Stack();\r\n        for(var x = v; x != this.s; x = this.edgeTo[x].other(x)) {\r\n            path.push(this.edgeTo[x]);\r\n        }  \r\n        return path.toArray();\r\n    };\r\n    \r\n    BellmanFord.prototype.distanceTo = function(v) {\r\n        return this.cost[v];  \r\n    };\r\n    \r\n    jss.BellmanFord = BellmanFord;\r\n    \r\n    var TopologicalSortShortestPaths = function(G, s) {\r\n        var V = G.V;\r\n        this.s = s;\r\n        this.marked = [];\r\n        this.edgeTo = [];\r\n        this.cost = [];\r\n        \r\n        \r\n        for(var v =0; v < V; ++v){\r\n            this.marked.push(false);\r\n            this.edgeTo.push(null);\r\n            this.cost.push(Number.MAX_VALUE);\r\n        }\r\n        \r\n        this.cost[s] = 0;\r\n        this.marked[s] = true;\r\n        \r\n        var order = new jss.TopologicalSort(G.toDiGraph()).order();\r\n        \r\n        \r\n        for(var j = 0; j < order.length; ++j){\r\n            var v = order[j];\r\n            var adj_v = G.adj(v);\r\n            for(var i = 0; i < adj_v.length; ++i) {\r\n                var e = adj_v[i];\r\n                this.relax(e);\r\n            }\r\n        }\r\n        \r\n        \r\n    };\r\n    \r\n    TopologicalSortShortestPaths.prototype.relax = function(e) {\r\n        \r\n        var v = e.from();\r\n        var w = e.to();\r\n        \r\n        if(this.cost[w] > this.cost[v] + e.weight) {\r\n            this.cost[w] = this.cost[v] + e.weight;\r\n            this.marked[w] = true;\r\n            this.edgeTo[w] = e;\r\n        }\r\n    };\r\n    \r\n    TopologicalSortShortestPaths.prototype.hasPathTo = function(v) {\r\n        return this.marked[v];  \r\n    };\r\n\r\n    \r\n    TopologicalSortShortestPaths.prototype.pathTo = function(v) {\r\n        var path = new jss.Stack();\r\n        for(var x = v; x != this.s; x = this.edgeTo[x].other(x)) {\r\n            path.push(this.edgeTo[x]);\r\n        }  \r\n        return path.toArray();\r\n    };\r\n    \r\n    TopologicalSortShortestPaths.prototype.distanceTo = function(v) {\r\n        return this.cost[v];  \r\n    };\r\n    \r\n    jss.TopologicalSortShortestPaths = TopologicalSortShortestPaths;\r\n    \r\n    var FordFulkerson = function(G, s, t) {\r\n        this.value = 0;\r\n        var V = G.V;\r\n        var bottle = Number.MAX_VALUE;\r\n        this.marked = null;\r\n        this.edgeTo = null;\r\n        this.s = s;\r\n        this.t = t;\r\n        while(this.hasAugmentedPath(G)){\r\n            \r\n            for(var x = this.t; x != this.s; x = this.edgeTo[x].other(x)) {\r\n                bottle = Math.min(bottle, this.edgeTo[x].residualCapacityTo(x));\r\n            }\r\n            \r\n            for(var x = this.t; x != this.s; x = this.edgeTo[x].other(x)) {\r\n                this.edgeTo[x].addResidualFlowTo(x, bottle);\r\n            }\r\n            \r\n            \r\n            this.value += bottle;\r\n        }\r\n    };\r\n    \r\n    FordFulkerson.prototype.hasAugmentedPath = function(G) {\r\n        var V = G.V;\r\n        this.marked = [];\r\n        this.edgeTo = [];\r\n        for(var v = 0; v < V; ++v) {\r\n            this.marked.push(false);\r\n            this.edgeTo.push(null);\r\n        }\r\n        \r\n        var queue = new jss.Queue();\r\n        queue.enqueue(this.s);\r\n        \r\n        this.marked[this.s] = true;\r\n        while(!queue.isEmpty()){\r\n            var v = queue.dequeue();\r\n            var adj_v = G.adj(v);\r\n            \r\n            for (var i = 0; i < adj_v.length; ++i) {\r\n                var e = adj_v[i];\r\n                var w = e.other(v);\r\n                if(!this.marked[w] && e.residualCapacityTo(w) > 0){\r\n                    this.edgeTo[w] = e;\r\n                    this.marked[w] = true;\r\n                    if(w == this.t){\r\n                        return true;\r\n                    }\r\n                    \r\n                    queue.enqueue(w);\r\n                }\r\n            }\r\n        }\r\n        \r\n        return false;\r\n    };\r\n    \r\n    FordFulkerson.prototype.minCut = function(G) {\r\n        var cuts = [];\r\n        var V = G.V;\r\n        for(var v = 0; v < V; ++v){\r\n            var adj_v = G.adj(v);\r\n            for(var i = 0; i < adj_v.length; ++i) {\r\n                var e = adj_v[i];\r\n                if(e.from() == v && e.residualCapacityTo(e.other(v)) == 0) {\r\n                    cuts.push(e);\r\n                }\r\n            }\r\n        }\r\n        \r\n        return cuts;\r\n    };\r\n\r\n    jss.FordFulkerson = FordFulkerson;\r\n})(jsgraphs);\r\n\r\nvar module = module || {};\r\nif(module) {\r\n\tmodule.exports = jsgraphs;\r\n}"]},"metadata":{},"sourceType":"script"}