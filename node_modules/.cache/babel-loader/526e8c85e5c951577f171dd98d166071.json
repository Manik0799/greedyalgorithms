{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _layout = require('./layout');\n\nvar _layout2 = _interopRequireDefault(_layout);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * OrderedTree is like Ordered but assumes there is one root\n * This way we can give non random positions to nodes on the Y-axis\n * It assumes the ordered nodes are of a perfect binary tree\n */\n\n\nvar OrderedTree = function (_Layout) {\n  _inherits(OrderedTree, _Layout);\n\n  function OrderedTree(graph, order) {\n    _classCallCheck(this, OrderedTree);\n\n    var _this = _possibleConstructorReturn(this, (OrderedTree.__proto__ || Object.getPrototypeOf(OrderedTree)).call(this, graph));\n\n    _this.order = order;\n\n    _this.layout();\n\n    return _this;\n  }\n\n  _createClass(OrderedTree, [{\n    key: 'layoutPrepare',\n    value: function layoutPrepare() {\n      // To reverse the order of rendering, we need to find out the\n      // absolute number of levels we have. simple log math applies.\n      var numNodes = this.order.length;\n      var totalLevels = Math.floor(Math.log(numNodes) / Math.log(2));\n      var counter = 1;\n      this.order.forEach(function (node) {\n        // Rank aka x coordinate\n        var rank = Math.floor(Math.log(counter) / Math.log(2)); // File relative to top\n\n        var file = counter - Math.pow(rank, 2);\n        node.layoutPosX = totalLevels - rank;\n        node.layoutPosY = file;\n        counter++;\n      });\n    }\n  }]);\n\n  return OrderedTree;\n}(_layout2.default);\n\nexports.default = OrderedTree;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/GreedyAssignment/assignment/node_modules/graphdracula/lib/layout/ordered_tree.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_layout","require","_layout2","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","OrderedTree","_Layout","graph","order","_this","getPrototypeOf","layout","layoutPrepare","numNodes","totalLevels","Math","floor","log","counter","forEach","node","rank","file","pow","layoutPosX","layoutPosY"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _layout = require('./layout');\n\nvar _layout2 = _interopRequireDefault(_layout);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * OrderedTree is like Ordered but assumes there is one root\n * This way we can give non random positions to nodes on the Y-axis\n * It assumes the ordered nodes are of a perfect binary tree\n */\nvar OrderedTree = function (_Layout) {\n  _inherits(OrderedTree, _Layout);\n\n  function OrderedTree(graph, order) {\n    _classCallCheck(this, OrderedTree);\n\n    var _this = _possibleConstructorReturn(this, (OrderedTree.__proto__ || Object.getPrototypeOf(OrderedTree)).call(this, graph));\n\n    _this.order = order;\n    _this.layout();\n    return _this;\n  }\n\n  _createClass(OrderedTree, [{\n    key: 'layoutPrepare',\n    value: function layoutPrepare() {\n      // To reverse the order of rendering, we need to find out the\n      // absolute number of levels we have. simple log math applies.\n      var numNodes = this.order.length;\n      var totalLevels = Math.floor(Math.log(numNodes) / Math.log(2));\n\n      var counter = 1;\n      this.order.forEach(function (node) {\n        // Rank aka x coordinate\n        var rank = Math.floor(Math.log(counter) / Math.log(2));\n        // File relative to top\n        var file = counter - Math.pow(rank, 2);\n\n        node.layoutPosX = totalLevels - rank;\n        node.layoutPosY = file;\n        counter++;\n      });\n    }\n  }]);\n\n  return OrderedTree;\n}(_layout2.default);\n\nexports.default = OrderedTree;"]},"metadata":{},"sourceType":"script"}