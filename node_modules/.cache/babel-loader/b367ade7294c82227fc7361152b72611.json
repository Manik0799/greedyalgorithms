{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _collection = require('lodash/collection');\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * Base class for rendering nodes\n *\n * Can transform coordinates to fit onto the canvas\n */\n\n\nvar Renderer = function () {\n  /**\n   * @param {DomElement|String} element target dom element or querySelector\n   * @param {Graph} graph Dracula Graph instance\n   * @param {number} width (optional) width of the canvas, default 400\n   * @param {number} height (optional) height of the canvas, default 300\n   */\n  function Renderer(element, graph, width, height) {\n    _classCallCheck(this, Renderer);\n\n    this.graph = graph; // Convert a query into a dom element\n\n    if (typeof element === 'string') {\n      element = typeof $ !== 'undefined' ? $(element)[0] : document.querySelector(element);\n    }\n\n    this.element = element;\n    this.width = width || 400;\n    this.height = height || 300;\n    this.radius = 40;\n  }\n  /**\n   * Scale the nodes within the canvas dimensions\n   * Keep a distance to the canvas edges of half a node radius\n   */\n\n\n  _createClass(Renderer, [{\n    key: 'draw',\n    value: function draw() {\n      var _this = this;\n\n      this.factorX = (this.width - 2 * this.radius) / (this.graph.layoutMaxX - this.graph.layoutMinX);\n      this.factorY = (this.height - 2 * this.radius) / (this.graph.layoutMaxY - this.graph.layoutMinY);\n      (0, _collection.each)(this.graph.nodes, function (node) {\n        node.point = _this.translate([node.layoutPosX, node.layoutPosY]);\n\n        _this.drawNode(node);\n      });\n      (0, _collection.each)(this.graph.edges, function (edge) {\n        _this.drawEdge(edge);\n      });\n    }\n  }, {\n    key: 'translate',\n    value: function translate(point) {\n      return [Math.round((point[0] - this.graph.layoutMinX) * this.factorX + this.radius), Math.round((point[1] - this.graph.layoutMinY) * this.factorY + this.radius)];\n    }\n  }, {\n    key: 'drawNode',\n    value: function drawNode(node) {\n      // eslint-disable-line no-unused-vars, class-methods-use-this\n      throw new Error('not implemented');\n    }\n  }, {\n    key: 'drawEdge',\n    value: function drawEdge(edge) {\n      // eslint-disable-line no-unused-vars, class-methods-use-this\n      throw new Error('not implemented');\n    }\n  }], [{\n    key: 'render',\n    value: function render() {\n      for (var _len = arguments.length, a = Array(_len), _key = 0; _key < _len; _key++) {\n        a[_key] = arguments[_key];\n      }\n\n      return new (Function.prototype.bind.apply(Renderer, [null].concat(a)))();\n    }\n  }]);\n\n  return Renderer;\n}();\n\nexports.default = Renderer;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/GreedyAssignment/assignment/node_modules/graphdracula/lib/renderer/renderer.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_collection","require","_classCallCheck","instance","TypeError","Renderer","element","graph","width","height","$","document","querySelector","radius","draw","_this","factorX","layoutMaxX","layoutMinX","factorY","layoutMaxY","layoutMinY","each","nodes","node","point","translate","layoutPosX","layoutPosY","drawNode","edges","edge","drawEdge","Math","round","Error","render","_len","arguments","a","Array","_key","Function","bind","apply","concat","default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,YAAY,GAAG,YAAY;AAAE,WAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,KAAlC,EAAyC;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAAE,UAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;AAA2BE,MAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,MAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,UAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4Bb,MAAAA,MAAM,CAACC,cAAP,CAAsBK,MAAtB,EAA8BI,UAAU,CAACI,GAAzC,EAA8CJ,UAA9C;AAA4D;AAAE;;AAAC,SAAO,UAAUK,WAAV,EAAuBC,UAAvB,EAAmCC,WAAnC,EAAgD;AAAE,QAAID,UAAJ,EAAgBX,gBAAgB,CAACU,WAAW,CAACG,SAAb,EAAwBF,UAAxB,CAAhB;AAAqD,QAAIC,WAAJ,EAAiBZ,gBAAgB,CAACU,WAAD,EAAcE,WAAd,CAAhB;AAA4C,WAAOF,WAAP;AAAqB,GAAhN;AAAmN,CAA9hB,EAAnB;;AAEA,IAAII,WAAW,GAAGC,OAAO,CAAC,mBAAD,CAAzB;;AAEA,SAASC,eAAT,CAAyBC,QAAzB,EAAmCP,WAAnC,EAAgD;AAAE,MAAI,EAAEO,QAAQ,YAAYP,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIQ,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;AAEzJ;;;;;;;AAKA,IAAIC,QAAQ,GAAG,YAAY;AAEzB;;;;;;AAMA,WAASA,QAAT,CAAkBC,OAAlB,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiD;AAC/CP,IAAAA,eAAe,CAAC,IAAD,EAAOG,QAAP,CAAf;;AAEA,SAAKE,KAAL,GAAaA,KAAb,CAH+C,CAI/C;;AACA,QAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;AAC/BA,MAAAA,OAAO,GAAG,OAAOI,CAAP,KAAa,WAAb,GAA2BA,CAAC,CAACJ,OAAD,CAAD,CAAW,CAAX,CAA3B,GAA2CK,QAAQ,CAACC,aAAT,CAAuBN,OAAvB,CAArD;AACD;;AACD,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKE,KAAL,GAAaA,KAAK,IAAI,GAAtB;AACA,SAAKC,MAAL,GAAcA,MAAM,IAAI,GAAxB;AACA,SAAKI,MAAL,GAAc,EAAd;AACD;AAED;;;;;;AAMA5B,EAAAA,YAAY,CAACoB,QAAD,EAAW,CAAC;AACtBV,IAAAA,GAAG,EAAE,MADiB;AAEtBX,IAAAA,KAAK,EAAE,SAAS8B,IAAT,GAAgB;AACrB,UAAIC,KAAK,GAAG,IAAZ;;AAEA,WAAKC,OAAL,GAAe,CAAC,KAAKR,KAAL,GAAa,IAAI,KAAKK,MAAvB,KAAkC,KAAKN,KAAL,CAAWU,UAAX,GAAwB,KAAKV,KAAL,CAAWW,UAArE,CAAf;AAEA,WAAKC,OAAL,GAAe,CAAC,KAAKV,MAAL,GAAc,IAAI,KAAKI,MAAxB,KAAmC,KAAKN,KAAL,CAAWa,UAAX,GAAwB,KAAKb,KAAL,CAAWc,UAAtE,CAAf;AAEA,OAAC,GAAGrB,WAAW,CAACsB,IAAhB,EAAsB,KAAKf,KAAL,CAAWgB,KAAjC,EAAwC,UAAUC,IAAV,EAAgB;AACtDA,QAAAA,IAAI,CAACC,KAAL,GAAaV,KAAK,CAACW,SAAN,CAAgB,CAACF,IAAI,CAACG,UAAN,EAAkBH,IAAI,CAACI,UAAvB,CAAhB,CAAb;;AACAb,QAAAA,KAAK,CAACc,QAAN,CAAeL,IAAf;AACD,OAHD;AAIA,OAAC,GAAGxB,WAAW,CAACsB,IAAhB,EAAsB,KAAKf,KAAL,CAAWuB,KAAjC,EAAwC,UAAUC,IAAV,EAAgB;AACtDhB,QAAAA,KAAK,CAACiB,QAAN,CAAeD,IAAf;AACD,OAFD;AAGD;AAhBqB,GAAD,EAiBpB;AACDpC,IAAAA,GAAG,EAAE,WADJ;AAEDX,IAAAA,KAAK,EAAE,SAAS0C,SAAT,CAAmBD,KAAnB,EAA0B;AAC/B,aAAO,CAACQ,IAAI,CAACC,KAAL,CAAW,CAACT,KAAK,CAAC,CAAD,CAAL,GAAW,KAAKlB,KAAL,CAAWW,UAAvB,IAAqC,KAAKF,OAA1C,GAAoD,KAAKH,MAApE,CAAD,EAA8EoB,IAAI,CAACC,KAAL,CAAW,CAACT,KAAK,CAAC,CAAD,CAAL,GAAW,KAAKlB,KAAL,CAAWc,UAAvB,IAAqC,KAAKF,OAA1C,GAAoD,KAAKN,MAApE,CAA9E,CAAP;AACD;AAJA,GAjBoB,EAsBpB;AACDlB,IAAAA,GAAG,EAAE,UADJ;AAEDX,IAAAA,KAAK,EAAE,SAAS6C,QAAT,CAAkBL,IAAlB,EAAwB;AAC7B;AACA,YAAM,IAAIW,KAAJ,CAAU,iBAAV,CAAN;AACD;AALA,GAtBoB,EA4BpB;AACDxC,IAAAA,GAAG,EAAE,UADJ;AAEDX,IAAAA,KAAK,EAAE,SAASgD,QAAT,CAAkBD,IAAlB,EAAwB;AAC7B;AACA,YAAM,IAAII,KAAJ,CAAU,iBAAV,CAAN;AACD;AALA,GA5BoB,CAAX,EAkCR,CAAC;AACHxC,IAAAA,GAAG,EAAE,QADF;AAEHX,IAAAA,KAAK,EAAE,SAASoD,MAAT,GAAkB;AACvB,WAAK,IAAIC,IAAI,GAAGC,SAAS,CAAChD,MAArB,EAA6BiD,CAAC,GAAGC,KAAK,CAACH,IAAD,CAAtC,EAA8CI,IAAI,GAAG,CAA1D,EAA6DA,IAAI,GAAGJ,IAApE,EAA0EI,IAAI,EAA9E,EAAkF;AAChFF,QAAAA,CAAC,CAACE,IAAD,CAAD,GAAUH,SAAS,CAACG,IAAD,CAAnB;AACD;;AAED,aAAO,KAAKC,QAAQ,CAAC3C,SAAT,CAAmB4C,IAAnB,CAAwBC,KAAxB,CAA8BvC,QAA9B,EAAwC,CAAC,IAAD,EAAOwC,MAAP,CAAcN,CAAd,CAAxC,CAAL,GAAP;AACD;AARE,GAAD,CAlCQ,CAAZ;;AA6CA,SAAOlC,QAAP;AACD,CA1Ec,EAAf;;AA4EAtB,OAAO,CAAC+D,OAAR,GAAkBzC,QAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _collection = require('lodash/collection');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Base class for rendering nodes\n *\n * Can transform coordinates to fit onto the canvas\n */\nvar Renderer = function () {\n\n  /**\n   * @param {DomElement|String} element target dom element or querySelector\n   * @param {Graph} graph Dracula Graph instance\n   * @param {number} width (optional) width of the canvas, default 400\n   * @param {number} height (optional) height of the canvas, default 300\n   */\n  function Renderer(element, graph, width, height) {\n    _classCallCheck(this, Renderer);\n\n    this.graph = graph;\n    // Convert a query into a dom element\n    if (typeof element === 'string') {\n      element = typeof $ !== 'undefined' ? $(element)[0] : document.querySelector(element);\n    }\n    this.element = element;\n    this.width = width || 400;\n    this.height = height || 300;\n    this.radius = 40;\n  }\n\n  /**\n   * Scale the nodes within the canvas dimensions\n   * Keep a distance to the canvas edges of half a node radius\n   */\n\n\n  _createClass(Renderer, [{\n    key: 'draw',\n    value: function draw() {\n      var _this = this;\n\n      this.factorX = (this.width - 2 * this.radius) / (this.graph.layoutMaxX - this.graph.layoutMinX);\n\n      this.factorY = (this.height - 2 * this.radius) / (this.graph.layoutMaxY - this.graph.layoutMinY);\n\n      (0, _collection.each)(this.graph.nodes, function (node) {\n        node.point = _this.translate([node.layoutPosX, node.layoutPosY]);\n        _this.drawNode(node);\n      });\n      (0, _collection.each)(this.graph.edges, function (edge) {\n        _this.drawEdge(edge);\n      });\n    }\n  }, {\n    key: 'translate',\n    value: function translate(point) {\n      return [Math.round((point[0] - this.graph.layoutMinX) * this.factorX + this.radius), Math.round((point[1] - this.graph.layoutMinY) * this.factorY + this.radius)];\n    }\n  }, {\n    key: 'drawNode',\n    value: function drawNode(node) {\n      // eslint-disable-line no-unused-vars, class-methods-use-this\n      throw new Error('not implemented');\n    }\n  }, {\n    key: 'drawEdge',\n    value: function drawEdge(edge) {\n      // eslint-disable-line no-unused-vars, class-methods-use-this\n      throw new Error('not implemented');\n    }\n  }], [{\n    key: 'render',\n    value: function render() {\n      for (var _len = arguments.length, a = Array(_len), _key = 0; _key < _len; _key++) {\n        a[_key] = arguments[_key];\n      }\n\n      return new (Function.prototype.bind.apply(Renderer, [null].concat(a)))();\n    }\n  }]);\n\n  return Renderer;\n}();\n\nexports.default = Renderer;"]},"metadata":{},"sourceType":"script"}