{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\GreedyAssignment\\\\assignment\\\\src\\\\Knapsack\\\\solution.js\";\nimport React, { useState } from \"react\";\n\nfunction Solution(props) {\n  const dataArray = new Array();\n  const maxWeight = props.maxWeight;\n\n  for (let i = 0; i < props.mainData.length; i++) {\n    let pwratio = props.mainData[i].value1 / props.mainData[i].value2;\n    let obj = {\n      ratio: pwratio,\n      index: i\n    };\n    dataArray.push(obj);\n  }\n\n  dataArray.sort((a, b) => a.ratio > b.ratio ? 1 : -1);\n  console.log(dataArray);\n  let ans = new Array(dataArray.length).fill(0);\n  console.log(ans);\n\n  function getAns() {\n    let w = 0;\n\n    for (let i = dataArray.length - 1; i >= 0; i++) {// let path= dataArray[i].index;\n      // let weightvalue= props.mainData[path].value2;\n      // if( w+weightvalue < maxWeight){\n      //     ans[path]= 1;\n      //     w+= weightvalue;\n      // } else{\n      //     ans[path]= (maxWeight-w)/weightvalue;\n      //     w= maxWeight;\n      //     break;\n      // }\n    }\n\n    console.log(ans);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Solution : \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Weight of Knapsack : \", props.maxWeight), getAns());\n}\n\nexport default Solution;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/GreedyAssignment/assignment/src/Knapsack/solution.js"],"names":["React","useState","Solution","props","dataArray","Array","maxWeight","i","mainData","length","pwratio","value1","value2","obj","ratio","index","push","sort","a","b","console","log","ans","fill","getAns","w"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAEpB,QAAMC,SAAS,GAAE,IAAIC,KAAJ,EAAjB;AACA,QAAMC,SAAS,GAAEH,KAAK,CAACG,SAAvB;;AAEA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,KAAK,CAACK,QAAN,CAAeC,MAA7B,EAAoCF,CAAC,EAArC,EAAwC;AACpC,QAAIG,OAAO,GAAEP,KAAK,CAACK,QAAN,CAAeD,CAAf,EAAkBI,MAAlB,GAAyBR,KAAK,CAACK,QAAN,CAAeD,CAAf,EAAkBK,MAAxD;AAEA,QAAIC,GAAG,GAAE;AAACC,MAAAA,KAAK,EAAEJ,OAAR;AAAiBK,MAAAA,KAAK,EAAER;AAAxB,KAAT;AAEAH,IAAAA,SAAS,CAACY,IAAV,CAAeH,GAAf;AACH;;AACDT,EAAAA,SAAS,CAACa,IAAV,CAAe,CAACC,CAAD,EAAGC,CAAH,KAAUD,CAAC,CAACJ,KAAF,GAAUK,CAAC,CAACL,KAAb,GAAsB,CAAtB,GAA0B,CAAC,CAAnD;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYjB,SAAZ;AAEA,MAAIkB,GAAG,GAAE,IAAIjB,KAAJ,CAAUD,SAAS,CAACK,MAApB,EAA4Bc,IAA5B,CAAiC,CAAjC,CAAT;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;;AAGA,WAASE,MAAT,GAAiB;AACb,QAAIC,CAAC,GAAC,CAAN;;AAEA,SAAI,IAAIlB,CAAC,GAACH,SAAS,CAACK,MAAV,GAAiB,CAA3B,EAA8BF,CAAC,IAAE,CAAjC,EAAoCA,CAAC,EAArC,EAAwC,CAEpC;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACH;;AAEDa,IAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AAGH;;AAOD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA0BnB,KAAK,CAACG,SAAhC,CAHJ,EAIKkB,MAAM,EAJX,CADJ;AAWH;;AAED,eAAetB,QAAf","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nfunction Solution(props){\r\n\r\n    const dataArray =new Array();\r\n    const maxWeight= props.maxWeight;\r\n\r\n    for(let i=0;i<props.mainData.length;i++){\r\n        let pwratio= props.mainData[i].value1/props.mainData[i].value2;\r\n\r\n        let obj= {ratio: pwratio, index: i};\r\n        \r\n        dataArray.push(obj);\r\n    }\r\n    dataArray.sort((a,b) => (a.ratio > b.ratio) ? 1 : -1);\r\n    console.log(dataArray);\r\n\r\n    let ans= new Array(dataArray.length).fill(0);\r\n    console.log(ans);\r\n\r\n\r\n    function getAns(){\r\n        let w=0;\r\n\r\n        for(let i=dataArray.length-1; i>=0; i++){\r\n\r\n            // let path= dataArray[i].index;\r\n\r\n            // let weightvalue= props.mainData[path].value2;\r\n\r\n            // if( w+weightvalue < maxWeight){\r\n\r\n            //     ans[path]= 1;\r\n            //     w+= weightvalue;\r\n\r\n            // } else{\r\n            //     ans[path]= (maxWeight-w)/weightvalue;\r\n            //     w= maxWeight;\r\n            //     break;\r\n            // }\r\n        }\r\n\r\n        console.log(ans);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Solution : </h1>\r\n            <br></br>\r\n            <h1>Weight of Knapsack : {props.maxWeight}</h1>\r\n            {getAns()}\r\n\r\n        </div>\r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default Solution;"]},"metadata":{},"sourceType":"module"}