{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\GreedyAssignment\\\\assignment\\\\src\\\\Dijkstra\\\\solution.js\";\nimport React from \"react\";\nimport jsgraphs from \"js-graph-algorithms\";\n\nfunction DijkstraSolution(props) {\n  let numberOfNodes = parseInt(props.nodeCount);\n  var g = new jsgraphs.WeightedDiGraph(numberOfNodes);\n  props.mainData.forEach(NodeRelation => {\n    let start = parseInt(NodeRelation.startNode);\n    let end = parseInt(NodeRelation.endNode);\n    let cost = parseInt(NodeRelation.cost); // Creation of Edge\n\n    g.addEdge(new jsgraphs.Edge(start, end, cost));\n  });\n  let source = parseInt(props.data[0].source);\n  let dest = parseInt(props.data[0].destination); // Start Node for algorithm\n\n  var dijkstra = new jsgraphs.Dijkstra(g, source); // End Node\n\n  var v = dest;\n  var path;\n\n  if (dijkstra.hasPathTo(v)) {\n    path = dijkstra.pathTo(v);\n  }\n\n  function printPath(p) {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, p.from(), \"  \\u279C  \", p.to(), \" : Cost= \", p.weight);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Source Node : \", source), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Destination Node : \", dest)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Path : \"), dijkstra.hasPathTo(v) ? path.map(printPath) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 60\n    }\n  }, \"No Path Found\"), dijkstra.hasPathTo(v) ? /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 38\n    }\n  }, \"Total Cost:  \", dijkstra.distanceTo(v)) : null);\n}\n\nexport default DijkstraSolution;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/GreedyAssignment/assignment/src/Dijkstra/solution.js"],"names":["React","jsgraphs","DijkstraSolution","props","numberOfNodes","parseInt","nodeCount","g","WeightedDiGraph","mainData","forEach","NodeRelation","start","startNode","end","endNode","cost","addEdge","Edge","source","data","dest","destination","dijkstra","Dijkstra","v","path","hasPathTo","pathTo","printPath","p","from","to","weight","marginTop","map","distanceTo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAgC;AAE5B,MAAIC,aAAa,GAAEC,QAAQ,CAACF,KAAK,CAACG,SAAP,CAA3B;AAIA,MAAIC,CAAC,GAAG,IAAIN,QAAQ,CAACO,eAAb,CAA6BJ,aAA7B,CAAR;AAGCD,EAAAA,KAAK,CAACM,QAAP,CAAiBC,OAAjB,CAAyBC,YAAY,IAAI;AAErC,QAAIC,KAAK,GAAEP,QAAQ,CAACM,YAAY,CAACE,SAAd,CAAnB;AACA,QAAIC,GAAG,GAAET,QAAQ,CAACM,YAAY,CAACI,OAAd,CAAjB;AACA,QAAIC,IAAI,GAAEX,QAAQ,CAACM,YAAY,CAACK,IAAd,CAAlB,CAJqC,CAOrC;;AACAT,IAAAA,CAAC,CAACU,OAAF,CAAU,IAAIhB,QAAQ,CAACiB,IAAb,CAAkBN,KAAlB,EAAyBE,GAAzB,EAA8BE,IAA9B,CAAV;AACH,GATD;AAaA,MAAIG,MAAM,GAAEd,QAAQ,CAACF,KAAK,CAACiB,IAAN,CAAW,CAAX,EAAcD,MAAf,CAApB;AACA,MAAIE,IAAI,GAAEhB,QAAQ,CAACF,KAAK,CAACiB,IAAN,CAAW,CAAX,EAAcE,WAAf,CAAlB,CAvB4B,CA0B5B;;AACA,MAAIC,QAAQ,GAAG,IAAItB,QAAQ,CAACuB,QAAb,CAAsBjB,CAAtB,EAAyBY,MAAzB,CAAf,CA3B4B,CA6B5B;;AACA,MAAIM,CAAC,GAAEJ,IAAP;AACA,MAAIK,IAAJ;;AAGA,MAAGH,QAAQ,CAACI,SAAT,CAAmBF,CAAnB,CAAH,EAAyB;AACrBC,IAAAA,IAAI,GAAEH,QAAQ,CAACK,MAAT,CAAgBH,CAAhB,CAAN;AACH;;AAED,WAASI,SAAT,CAAmBC,CAAnB,EAAqB;AAEjB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,CAAC,CAACC,IAAF,EAAL,gBAAoBD,CAAC,CAACE,EAAF,EAApB,eAAqCF,CAAC,CAACG,MAAvC,CADJ;AAGH;;AAOD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAmBf,MAAnB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBE,IAAxB,CAHJ,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARJ,EAUKE,QAAQ,CAACI,SAAT,CAAmBF,CAAnB,IAAwBC,IAAI,CAACS,GAAL,CAASN,SAAT,CAAxB,gBAA8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAVnD,EAWKN,QAAQ,CAACI,SAAT,CAAmBF,CAAnB,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAkBF,QAAQ,CAACa,UAAT,CAAoBX,CAApB,CAAlB,CAAxB,GAAwE,IAX7E,CADJ;AAiBH;;AAED,eAAevB,gBAAf","sourcesContent":["import React from \"react\";\r\nimport jsgraphs from \"js-graph-algorithms\";\r\n\r\nfunction DijkstraSolution(props){\r\n\r\n    let numberOfNodes= parseInt(props.nodeCount);\r\n\r\n\r\n\r\n    var g = new jsgraphs.WeightedDiGraph(numberOfNodes);\r\n\r\n\r\n    (props.mainData).forEach(NodeRelation => {\r\n        \r\n        let start= parseInt(NodeRelation.startNode);\r\n        let end= parseInt(NodeRelation.endNode);\r\n        let cost= parseInt(NodeRelation.cost);\r\n\r\n\r\n        // Creation of Edge\r\n        g.addEdge(new jsgraphs.Edge(start, end, cost));\r\n    });\r\n\r\n\r\n\r\n    let source= parseInt(props.data[0].source);\r\n    let dest= parseInt(props.data[0].destination);\r\n\r\n\r\n    // Start Node for algorithm\r\n    var dijkstra = new jsgraphs.Dijkstra(g, source);\r\n\r\n    // End Node\r\n    var v= dest;\r\n    var path;\r\n\r\n\r\n    if(dijkstra.hasPathTo(v)){\r\n        path= dijkstra.pathTo(v);\r\n    }\r\n\r\n    function printPath(p){\r\n\r\n        return(\r\n            <h4>{p.from()}  âžœ  {p.to()} : Cost= {p.weight}</h4>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div style={{marginTop: \"10px\"}}>\r\n\r\n                <h3>Source Node : {source}</h3>\r\n                <h3>Destination Node : {dest}</h3>\r\n\r\n            </div>\r\n            <br></br>\r\n            <h3>Path : </h3>\r\n\r\n            {dijkstra.hasPathTo(v) ? path.map(printPath) : <h4>No Path Found</h4>}\r\n            {dijkstra.hasPathTo(v) ? <h4>Total Cost:  {dijkstra.distanceTo(v)}</h4>: null}\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DijkstraSolution;"]},"metadata":{},"sourceType":"module"}