(this.webpackJsonpassignment=this.webpackJsonpassignment||[]).push([[0],{165:function(e,t,n){"use strict";n.r(t);var a=n(0),l=n.n(a),r=n(59),c=n.n(r),o=n(14);var i=function(){return l.a.createElement("header",null,l.a.createElement(o.b,{to:"/"},l.a.createElement("p",null,"Greedy Techniques")),l.a.createElement("div",{className:"tabs container row"}))};var s=function(e){var t={width:"35rem",height:"25rem",margin:"0 auto",backgroundColor:"#f6376d",borderRadius:"10px"},n={backgroundColor:"#263145",borderRadius:"10px",border:"none"};return"Graphs"===e.name&&(t.backgroundColor="#263145",n.backgroundColor="#f6376d"),l.a.createElement("div",{id:"mycard"},l.a.createElement("div",{class:"col-lg-4 col-sm-6"},l.a.createElement("div",{class:"card",style:t},l.a.createElement("div",{class:"card-body"},l.a.createElement("h5",{class:"card-title"},e.name),l.a.createElement("p",{class:"card-text"},e.desc),l.a.createElement(o.b,{to:e.link},l.a.createElement("button",{class:"btn btn-primary ",style:n},"Go to Page"))))))},u=[{name:"Fractional knapsack",description:"Given a set of items, each with a weight and a value, determine a subset of items to include in a collection so that the total weight is less than or equal to a given limit and the total value is as large as possible.",link:"/knapsack"},{name:"Minimum Spanning Tree",description:"Given a connected and undirected graph, a spanning tree of that graph is a subgraph that is a tree and connects all the vertices together.",link:"/mst"},{name:"Huffmann Coding",description:"A Huffman code is a particular type of optimal prefix code that is commonly used for lossless data compression. The process of finding or using such a code proceeds by means of Huffman coding",link:"/huffmann"},{name:"Task Scheduling Problem",description:"This is the dispute of optimally scheduling unit-time tasks on a single processor, where each job has a deadline and a penalty that necessary be paid if the deadline is missed.",link:"/taskscheduling"},{name:"Single source shortest path",description:"The shortest path problem is about finding a path between 2 vertices in a graph such that the total sum of the edges weights is minimum.",link:"/singlesource"},{name:"Graphs",description:"The time-input size graphs plotted for these algorithms.",link:"/graphs"}];function m(e){return l.a.createElement(s,{name:e.name,desc:e.description,link:e.link})}var d=function(){return l.a.createElement("div",{id:"intro-section"},l.a.createElement("div",{class:"container-fluid"},l.a.createElement("div",{class:"row"},u.map(m))))},p=n(1),b=n(3);var h=function(e){for(var t=new Array,n=e.maxWeight,a=0;a<e.mainData.length;a++){var r={ratio:e.mainData[a].value1/e.mainData[a].value2,index:a};t.push(r)}t.sort((function(e,t){return e.ratio>t.ratio?1:-1}));var c=new Array(t.length).fill(0);return l.a.createElement("div",{id:"knapsacksolution"},l.a.createElement("h1",{style:{borderBottom:"2px solid black"}},"Solution : "),l.a.createElement("br",null),l.a.createElement("h3",null,"Max weight : ",e.maxWeight),function(){for(var a=0,l=t.length-1;l>=0;l--){var r=t[l].index,o=e.mainData[r].value2;e.mainData[r].value1;if(!(a+(o=parseInt(o))<n)){c[r]=(n-a)/o*o,a=n;break}c[r]=1*o,a+=o}}(),l.a.createElement("h3",null,"Weights to pick of respective items : "),c.map((function(e){return l.a.createElement("h3",null,e," kg")})))};var g=function(){var e=Object(a.useState)([{value1:null,value2:null}]),t=Object(b.a)(e,2),n=t[0],r=t[1],c=Object(a.useState)(null),o=Object(b.a)(c,2),i=o[0],s=o[1],u=Object(a.useState)(!1),m=Object(b.a)(u,2),d=m[0],g=m[1];return l.a.createElement("div",{className:"container form",style:{marginTop:"20px"}},l.a.createElement("div",{className:"row"},l.a.createElement("div",{className:"col-lg-6"},l.a.createElement("input",{type:"number",placeholder:"Weight of Knapsack",onChange:function(e){return function(e){var t=e.target.value;s(t)}(e)}}),l.a.createElement("br",null),l.a.createElement("button",{type:"button",className:"btn btn-primary addbtn",onClick:function(){return function(){var e=Object(p.a)(n);e.push({value1:null,value2:null}),r(e)}()}},"Add Item"),n.map((function(e,t){return l.a.createElement("div",{key:"".concat(e,"-").concat(t),className:"inputs"},l.a.createElement("input",{type:"number",value:e.value1,placeholder:"Enter Profit",onChange:function(e){return function(e,t){var a=Object(p.a)(n);a[e].value1=t.target.value,r(a)}(t,e)}}),l.a.createElement("input",{style:{marginLeft:"10px"},type:"number",value:e.value2,placeholder:"Enter Weight",onChange:function(e){return function(e,t){var a=Object(p.a)(n);a[e].value2=t.target.value,r(a)}(t,e)}}),l.a.createElement("button",{type:"button",className:"btn btn-primary removebtn",onClick:function(){return function(e){var t=Object(p.a)(n);t.splice(e,1),r(t)}(t)}},"Remove item"))})),l.a.createElement("br",null),l.a.createElement("button",{className:"btn btn-primary",style:{marginTop:"10px",backgroundColor:"#263145"},onClick:function(){g(!0)}},"Get Solution")),l.a.createElement("div",{className:"col-lg-6"},d?l.a.createElement(h,{maxWeight:i,mainData:Object(p.a)(n)}):null)))};var f=function(){return l.a.createElement("div",null,l.a.createElement("div",{className:"container"},l.a.createElement("h1",{className:"problem-heading"},"Knapsack Problem"),l.a.createElement("h3",{style:{marginTop:"20px",fontWeight:"550"}},"Time Complexity : O(NlogN)"),l.a.createElement("p",{className:"problem-desc"},u[0].description)),l.a.createElement(g,null))};var v=function(e){for(var t=Object(p.a)(e.mainData),n=0;n<t.length;n++)t[n].starttime=parseInt(t[n].starttime),t[n].endtime=parseInt(t[n].endtime);t.sort((function(e,t){return e.endtime>t.endtime?1:-1}));var a=1,r=[];return l.a.createElement("div",null,l.a.createElement("h2",{style:{borderBottom:"1px solid black"}},"Solution : "),function(){var e=0;r.push(t[0]);for(var n=1;n<t.length;n++){var l=t[e].endtime;t[n].starttime>=l&&(e=n,r.push(t[n]),a++)}}(),l.a.createElement("h3",null,"Maximum Activities possible : ",a),l.a.createElement("h3",null,"Activities : "),l.a.createElement("br",null),r.map((function(e){return l.a.createElement("h4",null,"Time : ",e.starttime," to ",e.endtime)})))};var E=function(){var e=Object(a.useState)([{starttime:null,endtime:null}]),t=Object(b.a)(e,2),n=t[0],r=t[1],c=Object(a.useState)(!1),o=Object(b.a)(c,2),i=o[0],s=o[1];return l.a.createElement("div",{className:"container form",style:{marginTop:"20px"}},l.a.createElement("div",{className:"row"},l.a.createElement("div",{className:"col-lg-6"},l.a.createElement("br",null),l.a.createElement("h3",null,"Input in 24H format"),l.a.createElement("h3",null,"Ex - 1:00pm is 13"),l.a.createElement("button",{type:"button",className:"btn btn-primary addbtn",onClick:function(){return function(){var e=Object(p.a)(n);e.push({starttime:null,endtime:null}),r(e)}()}},"Add Activity"),n.map((function(e,t){return l.a.createElement("div",{key:"".concat(e,"-").concat(t),className:"inputs"},l.a.createElement("input",{type:"number",value:e.value1,placeholder:"Start Time (Integer)",onChange:function(e){return function(e,t){var a=Object(p.a)(n);a[e].starttime=t.target.value,r(a)}(t,e)}}),l.a.createElement("input",{style:{marginLeft:"10px"},type:"number",value:e.value2,placeholder:"End time (Integer)",onChange:function(e){return function(e,t){var a=Object(p.a)(n);a[e].endtime=t.target.value,r(a)}(t,e)}}),l.a.createElement("button",{type:"button",className:"btn btn-primary removebtn",onClick:function(){return function(e){var t=Object(p.a)(n);t.splice(e,1),r(t)}(t)}},"Remove Activity"))})),l.a.createElement("br",null),l.a.createElement("button",{className:"btn btn-primary",style:{marginTop:"10px",backgroundColor:"#263145"},onClick:function(){s(!0)}},"Get Solution")),l.a.createElement("div",{className:"col-lg-6"},i?l.a.createElement(v,{mainData:Object(p.a)(n)}):null)))};var N=function(){return l.a.createElement("div",null,l.a.createElement("div",{className:"container"},l.a.createElement("h1",{className:"problem-heading"},"Task Scheduling / Activity Selection Problem"),l.a.createElement("h3",{style:{marginTop:"20px",fontWeight:"550"}},"Time Complexity : O(NlogN) - Unsorted Inputs"),l.a.createElement("p",{className:"problem-desc"},u[3].description),l.a.createElement(E,null)))},y=n(27);var k=function(e){for(var t=Object(a.useRef)(null),n=Object(a.useRef)(null),r=[],c=0;c<e.n;c++){var o={id:c,label:"Node "+c};r.push(o)}var i=new y.a([].concat(r)),s=[];e.data.forEach((function(e){var t={from:e[0],to:e[1]};s.push(t)}));var u={nodes:i,edges:new y.a([].concat(s))},m={};return Object(a.useEffect)((function(){n.current=new y.b(t.current,u,m)}),[t,n,u,m]),l.a.createElement("div",{className:"canvas"},l.a.createElement("div",{ref:t,style:{height:"370px",border:"1px solid black",borderRadius:"10px"}}),l.a.createElement("br",null))};var C=function(e){var t=e.mainData,n=function(e){for(var n=function(e){for(var n=[],a=0;a<e;a++){n.push([]);for(var l=0;l<e;l++)n[a].push(0)}for(a=0;a<t.length;a++)n[t[a].startNode][t[a].endNode]=t[a].edgeWeight,n[t[a].endNode][t[a].startNode]=t[a].edgeWeight;return n}(e),a=0,l=[],r=[],c=[],o=[null,null,1/0];l.length!==e-1;){c.push(a);for(var i=0;i<e;i++)0!==n[a][i]&&r.push([a,i,n[a][i]]);for(var s=0;s<r.length;s++)r[s][2]<o[2]&&-1===c.indexOf(r[s][1])&&(o=r[s]);r.splice(r.indexOf(o),1),l.push(o),a=o[1],o=[null,null,1/0]}return l}(parseInt(e.nodeCount));return l.a.createElement("div",null,l.a.createElement("h2",null,"Solution :"),l.a.createElement("br",null),l.a.createElement("h3",null,"Number of Nodes : ",e.nodeCount),l.a.createElement("h3",null,"Minimum spanning tree has the following nodes: "),l.a.createElement("br",null),n.map((function(e){return l.a.createElement("h4",null,"Node ",e[0]," to ",e[1]," having edge weight ",e[2])})),l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement(k,{data:n,n:e.nodeCount}))};var x=function(){var e=Object(a.useState)([{startNode:null,endNode:null,edgeWeight:null}]),t=Object(b.a)(e,2),n=t[0],r=t[1],c=Object(a.useState)(!1),o=Object(b.a)(c,2),i=o[0],s=o[1],u=Object(a.useState)(1),m=Object(b.a)(u,2),d=m[0],h=m[1];return l.a.createElement("div",{className:"container form",style:{marginTop:"20px"}},l.a.createElement("div",{className:"row"},l.a.createElement("div",{className:"col-lg-6"},l.a.createElement("br",null),l.a.createElement("h3",null,"Number of Nodes"),l.a.createElement("input",{style:{marginTop:"10px"},type:"number",value:d,placeholder:"Number of Nodes",onChange:function(e){return function(e){var t=e.target.value;i&&s(!1),h(null===t?0:t)}(e)}}),l.a.createElement("h3",null,"Valid Node Labels: 0 to ",d-1),l.a.createElement("button",{type:"button",className:"btn btn-primary addbtn",onClick:function(){return function(){var e=Object(p.a)(n);e.push({startNode:null,endNode:null}),r(e)}()}},"Add Node Relation"),n.map((function(e,t){return l.a.createElement("div",{key:"".concat(e,"-").concat(t),className:"inputs"},l.a.createElement("input",{type:"number",value:e.startNode,placeholder:"Start Node",onChange:function(e){return function(e,t){i&&s(!1);var a=Object(p.a)(n);a[e].startNode=t.target.value,r(a)}(t,e)}}),l.a.createElement("input",{style:{marginLeft:"10px"},type:"number",value:e.endNode,placeholder:"End Node",onChange:function(e){return function(e,t){i&&s(!1);var a=Object(p.a)(n);a[e].endNode=t.target.value,r(a)}(t,e)}}),l.a.createElement("input",{style:{marginLeft:"5px"},type:"number",value:e.edgeWeight,placeholder:"Edge Weight",onChange:function(e){return function(e,t){i&&s(!1);var a=Object(p.a)(n);a[e].edgeWeight=t.target.value,r(a)}(t,e)}}),l.a.createElement("button",{type:"button",className:"btn btn-primary removebtn",onClick:function(){return function(e){var t=Object(p.a)(n);t.splice(e,1),r(t)}(t)}},"Delete"))})),l.a.createElement("br",null),l.a.createElement("button",{className:"btn btn-primary",style:{marginTop:"10px",backgroundColor:"#263145"},onClick:function(){s(!0)}},"Get Solution")),l.a.createElement("div",{className:"col-lg-6"},i?l.a.createElement(C,{mainData:Object(p.a)(n),nodeCount:d}):null)))};var O=function(){return l.a.createElement("div",null,l.a.createElement("div",{className:"container"},l.a.createElement("h1",{className:"problem-heading"},"Minimum Cost Spanning Tree"),l.a.createElement("h3",{style:{marginTop:"20px",fontWeight:"550"}},"Time Complexity : O( (V+E) logV)"),l.a.createElement("p",{className:"problem-desc"},u[1].description," The algorithm used is Prim's Algorithm to calculate the minimum cost spanning tree."),l.a.createElement("p",{className:"problem-desc"},l.a.createElement("b",null,"Instructions:")," For undirected edge between Node 1 and Node 2 , ",l.a.createElement("b",null,"Fill only in one of the inputs."),".")),l.a.createElement(x,null))};var S=function(e){function t(e){this.str=e;for(var t={},n=0;n<e.length;n++)e[n]in t?t[e[n]]++:t[e[n]]=1;var l=new a((function(e){return e[0]}));for(var r in t)l.push([t[r],r]);for(;l.size()>1;){var c=l.pop(),o=l.pop();l.push([c[0]+o[0],[c[1],o[1]]])}var i=l.pop();this.encoding={},this._generate_encoding(i[1],""),this.encoded_string="";var s=0;for(n=0;n<this.str.length;n++)s>=10&&(s=0,this.encoded_string+="\n"),this.encoded_string+=this.encoding[e[n]],s++}t.prototype._generate_encoding=function(e,t){e instanceof Array?(this._generate_encoding(e[0],t+"0"),this._generate_encoding(e[1],t+"1")):this.encoding[e]=t};var n=[];function a(e){this.content=[],this.scoreFunction=e}t.prototype.inspect_encoding=function(){for(var e in this.encoding){var t="";t=" "===e?"Space : "+this.encoding[e]:"\n"===e?"Enter : "+this.encoding[e]:e+" : "+this.encoding[e],n.push(t)}},a.prototype={push:function(e){this.content.push(e),this.bubbleUp(this.content.length-1)},pop:function(){var e=this.content[0],t=this.content.pop();return this.content.length>0&&(this.content[0]=t,this.sinkDown(0)),e},remove:function(e){for(var t=this.content.length,n=0;n<t;n++)if(this.content[n]==e){var a=this.content.pop();if(n===t-1)break;this.content[n]=a,this.bubbleUp(n),this.sinkDown(n);break}},size:function(){return this.content.length},bubbleUp:function(e){for(var t=this.content[e],n=this.scoreFunction(t);e>0;){var a=Math.floor((e+1)/2)-1,l=this.content[a];if(n>=this.scoreFunction(l))break;this.content[a]=t,this.content[e]=l,e=a}},sinkDown:function(e){for(var t=this.content.length,n=this.content[e],a=this.scoreFunction(n);;){var l=2*(e+1),r=l-1,c=null;if(r<t){var o=this.content[r],i=this.scoreFunction(o);i<a&&(c=r)}if(l<t){var s=this.content[l];this.scoreFunction(s)<(null==c?a:i)&&(c=l)}if(null===c)break;this.content[e]=this.content[c],this.content[c]=n,e=c}}};var r=new t(e.data);return l.a.createElement("div",null,l.a.createElement("h3",null,l.a.createElement("b",null,"Original text: ")," ",e.data," "),l.a.createElement("br",null),l.a.createElement("h3",null,l.a.createElement("b",null,"Code : ")," ",r.encoded_string),void r.inspect_encoding(),l.a.createElement("br",null),l.a.createElement("h3",null,l.a.createElement("b",null,"Character codes : ")," "),l.a.createElement("br",null),n.map((function(e){return l.a.createElement("h4",null,e)})))};var j=function(){var e=Object(a.useState)(null),t=Object(b.a)(e,2),n=t[0],r=t[1],c=Object(a.useState)(!1),o=Object(b.a)(c,2),i=o[0],s=o[1];return l.a.createElement("div",{className:"container gettext"},l.a.createElement("div",{className:"row"},l.a.createElement("div",{className:"col-lg-6"},l.a.createElement("h2",null,"Enter text to encode : "),l.a.createElement("textarea",{id:"userText",rows:"4",cols:"50",value:n,onChange:function(e){return function(e){var t=e.target.value;i&&s(!1),r(t)}(e)}}),l.a.createElement("p",null),l.a.createElement("button",{className:"btn btn-primary",style:{marginTop:"10px",backgroundColor:"#263145"},onClick:function(){s(!i)}},"Encode")),l.a.createElement("div",{className:"col-lg-6"},i?l.a.createElement(S,{data:n}):null)))};var T=function(){return l.a.createElement("div",null,l.a.createElement("div",{className:"container"},l.a.createElement("h1",{className:"problem-heading"},"Huffmann encoding"),l.a.createElement("h3",{style:{marginTop:"20px",fontWeight:"550"}},"Time Complexity : O(NlogN)"),l.a.createElement("p",{className:"problem-desc"},u[2].description)),l.a.createElement(j,null))},w=n(28),A=n.n(w);var I=function(e){var t=parseInt(e.nodeCount),n=new A.a.WeightedDiGraph(t);e.mainData.forEach((function(e){var t=parseInt(e.startNode),a=parseInt(e.endNode),l=parseInt(e.cost);n.addEdge(new A.a.Edge(t,a,l))}));var a,r=parseInt(e.data[0].source),c=parseInt(e.data[0].destination),o=new A.a.Dijkstra(n,r),i=c;return o.hasPathTo(i)&&(a=o.pathTo(i)),l.a.createElement("div",null,l.a.createElement("div",{style:{marginTop:"10px"}},l.a.createElement("h3",null,"Source Node : ",r),l.a.createElement("h3",null,"Destination Node : ",c)),l.a.createElement("br",null),l.a.createElement("h3",null,l.a.createElement("b",null,"Path : ")," "),o.hasPathTo(i)?a.map((function(e){return l.a.createElement("h4",null,e.from(),"  \u279c  ",e.to()," : Cost= ",e.weight)})):l.a.createElement("h4",null,"No Path Found"),o.hasPathTo(i)?l.a.createElement("h4",null,l.a.createElement("b",null,"Total Cost : "),"  ",o.distanceTo(i)):null)};var D=function(){var e=Object(a.useState)([{startNode:null,endNode:null,cost:null}]),t=Object(b.a)(e,2),n=t[0],r=t[1],c=Object(a.useState)(!1),o=Object(b.a)(c,2),i=o[0],s=o[1],u=Object(a.useState)(null),m=Object(b.a)(u,2),d=m[0],h=m[1],g=Object(a.useState)([{source:null,destination:null}]),f=Object(b.a)(g,2),v=f[0],E=f[1];return l.a.createElement("div",{className:"container form",style:{marginTop:"20px"}},l.a.createElement("div",{className:"row"},l.a.createElement("div",{className:"col-lg-6"},l.a.createElement("br",null),l.a.createElement("input",{style:{marginTop:"10px"},type:"number",value:d,placeholder:"Number of Nodes",onChange:function(e){return function(e){i&&s(!1);var t=e.target.value;h(t)}(e)}}),l.a.createElement("br",null),l.a.createElement("input",{style:{marginTop:"10px"},type:"number",value:v.source,placeholder:"Source Node",onChange:function(e){return function(e){i&&s(!1);var t=Object(p.a)(v);t[0].source=e.target.value,E(t)}(e)}}),l.a.createElement("input",{style:{marginLeft:"8px",marginTop:"10px"},type:"number",value:v.destination,placeholder:"Destination Node",onChange:function(e){return function(e){i&&s(!1);var t=Object(p.a)(v);t[0].destination=e.target.value,E(t)}(e)}}),l.a.createElement("h2",null,"Valid node Labels: 0 to ",d-1),l.a.createElement("button",{type:"button",className:"btn btn-primary addbtn",onClick:function(){return function(){var e=Object(p.a)(n);e.push({startNode:null,endNode:null}),r(e)}()}},"Add Node Relation"),n.map((function(e,t){return l.a.createElement("div",{key:"".concat(e,"-").concat(t),className:"inputs"},l.a.createElement("input",{type:"number",value:e.startNode,placeholder:"Start Node",onChange:function(e){return function(e,t){i&&s(!1);var a=Object(p.a)(n);a[e].startNode=t.target.value,r(a)}(t,e)}}),l.a.createElement("input",{style:{marginLeft:"10px"},type:"number",value:e.endNode,placeholder:"End Node",onChange:function(e){return function(e,t){i&&s(!1);var a=Object(p.a)(n);a[e].endNode=t.target.value,r(a)}(t,e)}}),l.a.createElement("input",{style:{marginLeft:"5px"},type:"number",value:e.cost,placeholder:"Cost",onChange:function(e){return function(e,t){i&&s(!1);var a=Object(p.a)(n);a[e].cost=t.target.value,r(a)}(t,e)}}),l.a.createElement("button",{type:"button",className:"btn btn-primary removebtn",onClick:function(){return function(e){var t=Object(p.a)(n);t.splice(e,1),r(t)}(t)}},"Delete"))})),l.a.createElement("br",null),l.a.createElement("button",{className:"btn btn-primary",style:{marginTop:"10px",backgroundColor:"#263145"},onClick:function(){s(!0)}},"Get Solution")),l.a.createElement("div",{className:"col-lg-6"},i?l.a.createElement(I,{mainData:Object(p.a)(n),nodeCount:d,data:Object(p.a)(v)}):null)))};var L=function(){return l.a.createElement("div",null,l.a.createElement("div",{className:"container"},l.a.createElement("h1",{className:"problem-heading"},"Single Source Shortest Path"),l.a.createElement("h3",{style:{marginTop:"20px",fontWeight:"550"}},"Time Complexity : O((V+E) logV)"),l.a.createElement("p",{className:"problem-desc"},u[4].description)),l.a.createElement(D,null))},W=n(7);var P=function(){return l.a.createElement("div",null,l.a.createElement(W.a,{data:{labels:["n=40000","n=120000","n=240000","n=480000"],datasets:[{label:"Fractional Knapsack - O(N logN)",fill:!1,backgroundColor:"#f6376d",borderColor:"#f6376d",data:[.001,.002,.0025,.004]}]},options:{legend:{labels:{fontColor:"black",fontSize:16}},scales:{yAxes:[{ticks:{fontColor:"black",beginAtZero:!0},scaleLabel:{display:!0,labelString:"Time"}}],xAxes:[{ticks:{fontColor:"black",beginAtZero:!0},scaleLabel:{display:!0,labelString:"Input Size"}}]}}}))};var _=function(){return l.a.createElement("div",null,l.a.createElement(W.a,{data:{labels:["n=40000","n=120000","n=240000","n=480000"],datasets:[{label:"Activity Selection - O(N logN)",fill:!1,backgroundColor:"#263145",borderColor:"#263145",data:[.0015,.0021,.0032,.0042]}]},options:{legend:{labels:{fontColor:"black",fontSize:16}},scales:{yAxes:[{ticks:{fontColor:"black",beginAtZero:!0},scaleLabel:{display:!0,labelString:"Time"}}],xAxes:[{ticks:{fontColor:"black",beginAtZero:!0},scaleLabel:{display:!0,labelString:"Input Size"}}]}}}))};var z=function(){return l.a.createElement("div",null,l.a.createElement(W.a,{data:{labels:["n","n","n","n"],datasets:[{label:"Minimum Spanning Tree - O((V+E) logV)",fill:!1,backgroundColor:"#f6376d",borderColor:"#f6376d",data:[.0018,.0029,.0041,.0056]}]},options:{legend:{labels:{fontColor:"black",fontSize:16}},scales:{yAxes:[{ticks:{fontColor:"black",beginAtZero:!0},scaleLabel:{display:!0,labelString:"Time"}}],xAxes:[{ticks:{fontColor:"black",beginAtZero:!0},scaleLabel:{display:!0,labelString:"Input Size"}}]}}}))};var G=function(){return l.a.createElement("div",null,l.a.createElement(W.a,{data:{labels:["n","n","n","n"],datasets:[{label:"Single Source Shortest Path - O((V+E) logV)",fill:!1,backgroundColor:"#f6376d",borderColor:"#f6376d",data:[.0019,.0028,.0043,.0058]}]},options:{legend:{labels:{fontColor:"black",fontSize:16}},scales:{yAxes:[{ticks:{fontColor:"black",beginAtZero:!0},scaleLabel:{display:!0,labelString:"Time"}}],xAxes:[{ticks:{fontColor:"black",beginAtZero:!0},scaleLabel:{display:!0,labelString:"Input Size"}}]}}}))};var F=function(){return l.a.createElement("div",null,l.a.createElement(W.a,{data:{labels:["n=20000","n=80000","n=160000","n=320000"],datasets:[{label:"Huffmann Coding - O(N logN)",fill:!1,backgroundColor:"#263145",borderColor:"#263145",data:[.001,.0017,.0025,.0032]}]},options:{legend:{labels:{fontColor:"black",fontSize:16}},scales:{yAxes:[{ticks:{fontColor:"black",beginAtZero:!0},scaleLabel:{display:!0,labelString:"Time"}}],xAxes:[{ticks:{fontColor:"black",beginAtZero:!0},scaleLabel:{display:!0,labelString:"Input Size"}}]}}}))};var V=function(){return l.a.createElement("div",{className:"container"},l.a.createElement("h1",null,"Graphical Plots"),l.a.createElement("br",null),l.a.createElement("div",{className:"row"},l.a.createElement("div",{className:"col-md-6"},l.a.createElement(P,null)),l.a.createElement("div",{className:"col-md-6"},l.a.createElement(_,null))),l.a.createElement("br",null),l.a.createElement("div",{className:"row"},l.a.createElement("div",{className:"col-md-6"},l.a.createElement(F,null)),l.a.createElement("div",{className:"col-md-6"},l.a.createElement(z,null))),l.a.createElement("br",null),l.a.createElement("div",{className:"row"},l.a.createElement("div",{className:"col-md-6"},l.a.createElement(G,null))))},Z=n(11);var R=function(){return l.a.createElement(o.a,null,l.a.createElement("div",{className:"App"},l.a.createElement(i,null),l.a.createElement("div",{className:"container-fluid"},l.a.createElement(Z.c,null,l.a.createElement(Z.a,{path:"/",exact:!0,component:d}),l.a.createElement(Z.a,{path:"/knapsack",component:f}),l.a.createElement(Z.a,{path:"/taskscheduling",component:N}),l.a.createElement(Z.a,{path:"/mst",component:O}),l.a.createElement(Z.a,{path:"/huffmann",component:T}),l.a.createElement(Z.a,{path:"/singlesource",component:L}),l.a.createElement(Z.a,{path:"/graphs",component:V})))))};c.a.render(l.a.createElement(R,null),document.getElementById("root"))},63:function(e,t,n){e.exports=n(165)}},[[63,1,2]]]);
//# sourceMappingURL=main.01b26623.chunk.js.map