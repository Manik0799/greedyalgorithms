{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\GreedyAssignment\\\\assignment\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\ASUS\\\\Desktop\\\\GreedyAssignment\\\\assignment\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Solution from\"./solution\";function SolutionMST(){var _useState=useState([{startNode:null,endNode:null,edgeWeight:null}]),_useState2=_slicedToArray(_useState,2),fields=_useState2[0],setFields=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),solution=_useState4[0],setSolution=_useState4[1];var _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),numberOfNodes=_useState6[0],setNumber=_useState6[1];function handleStartNode(i,event){if(solution){setSolution(false);}var values=_toConsumableArray(fields);values[i].startNode=event.target.value;setFields(values);}function handleEndNode(i,event){if(solution){setSolution(false);}var values=_toConsumableArray(fields);values[i].endNode=event.target.value;setFields(values);}function handleEdgeWeight(i,event){if(solution){setSolution(false);}var values=_toConsumableArray(fields);values[i].edgeWeight=event.target.value;setFields(values);}function handleNumberOfNode(event){var number=event.target.value;if(solution){setSolution(false);}if(number===null){setNumber(0);}else{setNumber(number);}}function handleAdd(){var values=_toConsumableArray(fields);values.push({startNode:null,endNode:null});setFields(values);}function handleRemove(i){var values=_toConsumableArray(fields);values.splice(i,1);setFields(values);}function getSolution(){setSolution(true);}return/*#__PURE__*/React.createElement(\"div\",{className:\"container form\",style:{marginTop:\"20px\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-lg-6\"},/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"h3\",null,\"Number of Nodes\"),/*#__PURE__*/React.createElement(\"input\",{style:{marginTop:\"10px\"},type:\"number\",value:numberOfNodes,placeholder:\"Number of Nodes\",onChange:function onChange(e){return handleNumberOfNode(e);}}),/*#__PURE__*/React.createElement(\"h3\",null,\"Valid Node Labels: 0 to \",numberOfNodes-1),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-primary addbtn\",onClick:function onClick(){return handleAdd();}},\"Add Node Relation\"),fields.map(function(field,idx){return/*#__PURE__*/React.createElement(\"div\",{key:\"\".concat(field,\"-\").concat(idx),className:\"inputs\"},/*#__PURE__*/React.createElement(\"input\",{type:\"number\",value:field.startNode,placeholder:\"Start Node\",onChange:function onChange(e){return handleStartNode(idx,e);}}),/*#__PURE__*/React.createElement(\"input\",{style:{marginLeft:\"10px\"},type:\"number\",value:field.endNode,placeholder:\"End Node\",onChange:function onChange(e){return handleEndNode(idx,e);}}),/*#__PURE__*/React.createElement(\"input\",{style:{marginLeft:\"5px\"},type:\"number\",value:field.edgeWeight,placeholder:\"Edge Weight\",onChange:function onChange(e){return handleEdgeWeight(idx,e);}}),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-primary removebtn\",onClick:function onClick(){return handleRemove(idx);}},\"Delete\"));}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",style:{marginTop:\"10px\",backgroundColor:\"#263145\"},onClick:function onClick(){return getSolution();}},\"Get Solution\")),/*#__PURE__*/React.createElement(\"div\",{className:\"col-lg-6\"},solution?/*#__PURE__*/React.createElement(Solution,{mainData:_toConsumableArray(fields),nodeCount:numberOfNodes}):null)));}export default SolutionMST;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/GreedyAssignment/assignment/src/MST/main.js"],"names":["React","useState","Solution","SolutionMST","startNode","endNode","edgeWeight","fields","setFields","solution","setSolution","numberOfNodes","setNumber","handleStartNode","i","event","values","target","value","handleEndNode","handleEdgeWeight","handleNumberOfNode","number","handleAdd","push","handleRemove","splice","getSolution","marginTop","e","map","field","idx","marginLeft","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport Solution from \"./solution\";\r\n\r\nfunction SolutionMST(){\r\n\r\n    const [fields, setFields] = useState([{ startNode: null, endNode: null, edgeWeight: null}]);\r\n    const [solution, setSolution]= useState(false);\r\n    const [numberOfNodes, setNumber]= useState(1);\r\n  \r\n\r\n    function handleStartNode(i, event) {\r\n        if(solution){\r\n            setSolution(false);\r\n        }\r\n        \r\n      const values = [...fields];\r\n      values[i].startNode = event.target.value;\r\n      setFields(values);\r\n    }\r\n\r\n    function handleEndNode(i, event){\r\n        if(solution){\r\n            setSolution(false);\r\n        }\r\n\r\n        const values = [...fields];\r\n        values[i].endNode = event.target.value;\r\n        setFields(values);\r\n    }\r\n\r\n    function handleEdgeWeight(i, event){\r\n        if(solution){\r\n            setSolution(false);\r\n        }\r\n\r\n        const values = [...fields];\r\n        values[i].edgeWeight = event.target.value;\r\n        setFields(values);\r\n    }\r\n\r\n    function handleNumberOfNode(event){\r\n\r\n        \r\n        const number= event.target.value;\r\n\r\n        if(solution){\r\n            setSolution(false);\r\n        }\r\n\r\n         if(number===null){\r\n             setNumber(0);\r\n         } else{\r\n            setNumber(number);\r\n\r\n         }\r\n    }\r\n  \r\n    function handleAdd() {\r\n      const values = [...fields];\r\n      values.push({ startNode: null, endNode: null });\r\n      setFields(values);\r\n    }\r\n  \r\n    function handleRemove(i) {\r\n      const values = [...fields];\r\n      values.splice(i, 1);\r\n      setFields(values);\r\n    }\r\n\r\n    function getSolution(){\r\n                \r\n        setSolution(true);\r\n    }\r\n\r\n  \r\n    return (\r\n\r\n      <div className=\"container form\" style={{marginTop: \"20px\"}}>\r\n      <div className= \"row\">\r\n          <div className= \"col-lg-6\">\r\n\r\n                <br></br>\r\n\r\n            \r\n                <h3>Number of Nodes</h3>\r\n\r\n                <input\r\n                    style={{marginTop: \"10px\"}}\r\n                    type=\"number\"\r\n                    value= {numberOfNodes}\r\n                    placeholder= \"Number of Nodes\"\r\n                    onChange= {e => handleNumberOfNode(e)}\r\n                ></input>\r\n\r\n                <h3>Valid Node Labels: 0 to {numberOfNodes-1}</h3>\r\n\r\n                <button type=\"button\" className=\"btn btn-primary addbtn\" onClick={() => handleAdd()}>\r\n                Add Node Relation\r\n                </button>\r\n        \r\n                {fields.map((field, idx) => {\r\n                return (\r\n                    <div key={`${field}-${idx}`} className= \"inputs\">\r\n                    <input\r\n                        type=\"number\" \r\n                        value={field.startNode} \r\n                        placeholder=\"Start Node\" \r\n                        onChange={e => handleStartNode(idx, e)}\r\n                    />\r\n                    <input style={{marginLeft: \"10px\"}}\r\n                        type=\"number\" \r\n                        value={field.endNode} \r\n                        placeholder=\"End Node\" \r\n                        onChange={e => handleEndNode(idx, e)}\r\n                    />\r\n                    <input style={{marginLeft: \"5px\"}}\r\n                        type=\"number\" \r\n                        value={field.edgeWeight} \r\n                        placeholder=\"Edge Weight\" \r\n                        onChange={e => handleEdgeWeight(idx, e)}\r\n                    />\r\n\r\n                    <button type=\"button\" className= \"btn btn-primary removebtn\" onClick={() => handleRemove(idx)}>\r\n                        Delete \r\n                    </button>\r\n                    </div>\r\n                );\r\n                })}\r\n                <br></br>\r\n\r\n                {/* Get the Solution button */}\r\n                <button \r\n                className=\"btn btn-primary\" \r\n                style={{marginTop: \"10px\", backgroundColor: \"#263145\"}}\r\n                onClick={() => getSolution()}\r\n                >\r\n                Get Solution\r\n                </button>\r\n          </div>\r\n\r\n          <div className= \"col-lg-6\">\r\n          {/* Rendering solution component based on the value of solution variable */}\r\n          {solution ?\r\n           <Solution \r\n            mainData = {[...fields]}\r\n            nodeCount= {numberOfNodes}\r\n            />\r\n          : null}\r\n\r\n          </div>\r\n      </div>\r\n  \r\n        \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default SolutionMST;"]},"metadata":{},"sourceType":"module"}