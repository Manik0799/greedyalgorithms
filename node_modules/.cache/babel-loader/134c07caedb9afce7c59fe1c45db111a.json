{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\GreedyAssignment\\\\assignment\\\\src\\\\Huffmann\\\\main.js\";\nimport React, { useState } from \"react\";\n\nfunction SolutionHuffmann() {\n  const [text, setText] = useState(\"\");\n  const [solution, setSolution] = useState(false);\n\n  function handleTextChange(event) {\n    const newtext = event.target.value;\n    setText(newtext);\n  }\n\n  function getSolution() {\n    setSolution(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container gettext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"Enter text to encode : \"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"userText\",\n    rows: \"4\",\n    cols: \"50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    style: {\n      marginTop: \"10px\",\n      backgroundColor: \"#263145\"\n    },\n    onClick: () => getSolution(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Encode\")));\n}\n\nexport default SolutionHuffmann;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/GreedyAssignment/assignment/src/Huffmann/main.js"],"names":["React","useState","SolutionHuffmann","text","setText","solution","setSolution","handleTextChange","event","newtext","target","value","getSolution","marginTop","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAGA,SAASC,gBAAT,GAA2B;AAEvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAiBH,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAAyBL,QAAQ,CAAC,KAAD,CAAvC;;AAEA,WAASM,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7B,UAAMC,OAAO,GAAED,KAAK,CAACE,MAAN,CAAaC,KAA5B;AACAP,IAAAA,OAAO,CAACK,OAAD,CAAP;AACH;;AAED,WAASG,WAAT,GAAsB;AAElBN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,eAEI;AAAU,IAAA,EAAE,EAAC,UAAb;AAAwB,IAAA,IAAI,EAAC,GAA7B;AAAiC,IAAA,IAAI,EAAC,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADA,eAQA;AACI,IAAA,SAAS,EAAC,iBADd;AAEI,IAAA,KAAK,EAAE;AAACO,MAAAA,SAAS,EAAE,MAAZ;AAAoBC,MAAAA,eAAe,EAAE;AAArC,KAFX;AAGI,IAAA,OAAO,EAAE,MAAMF,WAAW,EAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARA,CADJ,CADJ;AAuBH;;AAED,eAAeV,gBAAf","sourcesContent":["import React, {useState} from \"react\";\r\n\r\n\r\nfunction SolutionHuffmann(){\r\n\r\n    const [text, setText]= useState(\"\");\r\n    const [solution, setSolution]= useState(false);\r\n    \r\n    function handleTextChange(event) {\r\n        const newtext= event.target.value;\r\n        setText(newtext);\r\n    }\r\n\r\n    function getSolution(){\r\n                \r\n        setSolution(true);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className= \"container gettext\">\r\n            <div>\r\n                <h2>Enter text to encode : </h2>\r\n                <textarea id=\"userText\" rows=\"4\" cols=\"50\">\r\n                </textarea>\r\n            </div>\r\n\r\n\r\n            <button \r\n                className=\"btn btn-primary\" \r\n                style={{marginTop: \"10px\", backgroundColor: \"#263145\"}}\r\n                onClick={() => getSolution()}\r\n                >\r\n                Encode\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default SolutionHuffmann;"]},"metadata":{},"sourceType":"module"}