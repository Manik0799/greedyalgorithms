{"ast":null,"code":"import React,{useState}from\"react\";function Solution(props){var dataArray=new Array();var maxWeight=props.maxWeight;for(var i=0;i<props.mainData.length;i++){var pwratio=props.mainData[i].value1/props.mainData[i].value2;var obj={ratio:pwratio,index:i};dataArray.push(obj);}dataArray.sort(function(a,b){return a.ratio>b.ratio?1:-1;});// console.log(dataArray);\nvar ans=new Array(dataArray.length).fill(0);// console.log(ans);\n// Main Code\nfunction getSolution(){var w=0;for(var _i=dataArray.length-1;_i>=0;_i--){var _obj=dataArray[_i];var path=_obj.index;var weightvalue=props.mainData[path].value2;var profitvalue=props.mainData[path].value1;weightvalue=parseInt(weightvalue);if(w+weightvalue<maxWeight){ans[path]=1*weightvalue;w+=weightvalue;}else{ans[path]=(maxWeight-w)/weightvalue*weightvalue;w=maxWeight;break;}}}return/*#__PURE__*/React.createElement(\"div\",{id:\"knapsacksolution\"},/*#__PURE__*/React.createElement(\"h1\",{style:{borderBottom:\"2px solid black\"}},\"Solution : \"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"h3\",null,\"Max weight : \",props.maxWeight),getSolution(),/*#__PURE__*/React.createElement(\"h3\",null,\"Weights to pick of respective items : \"),ans.map(function(item){return/*#__PURE__*/React.createElement(\"h3\",null,item,\" kg\");}));}export default Solution;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/GreedyAssignment/assignment/src/Knapsack/solution.js"],"names":["React","useState","Solution","props","dataArray","Array","maxWeight","i","mainData","length","pwratio","value1","value2","obj","ratio","index","push","sort","a","b","ans","fill","getSolution","w","path","weightvalue","profitvalue","parseInt","borderBottom","map","item"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CAEA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAwB,CAEpB,GAAMC,CAAAA,SAAS,CAAE,GAAIC,CAAAA,KAAJ,EAAjB,CACA,GAAMC,CAAAA,SAAS,CAAEH,KAAK,CAACG,SAAvB,CAEA,IAAI,GAAIC,CAAAA,CAAC,CAAC,CAAV,CAAYA,CAAC,CAACJ,KAAK,CAACK,QAAN,CAAeC,MAA7B,CAAoCF,CAAC,EAArC,CAAwC,CACpC,GAAIG,CAAAA,OAAO,CAAEP,KAAK,CAACK,QAAN,CAAeD,CAAf,EAAkBI,MAAlB,CAAyBR,KAAK,CAACK,QAAN,CAAeD,CAAf,EAAkBK,MAAxD,CAEA,GAAIC,CAAAA,GAAG,CAAE,CAACC,KAAK,CAAEJ,OAAR,CAAiBK,KAAK,CAAER,CAAxB,CAAT,CAEAH,SAAS,CAACY,IAAV,CAAeH,GAAf,EACH,CACDT,SAAS,CAACa,IAAV,CAAe,SAACC,CAAD,CAAGC,CAAH,QAAUD,CAAAA,CAAC,CAACJ,KAAF,CAAUK,CAAC,CAACL,KAAb,CAAsB,CAAtB,CAA0B,CAAC,CAApC,EAAf,EACA;AAEA,GAAIM,CAAAA,GAAG,CAAE,GAAIf,CAAAA,KAAJ,CAAUD,SAAS,CAACK,MAApB,EAA4BY,IAA5B,CAAiC,CAAjC,CAAT,CACA;AAIA;AACA,QAASC,CAAAA,WAAT,EAAsB,CAClB,GAAIC,CAAAA,CAAC,CAAC,CAAN,CAGA,IAAI,GAAIhB,CAAAA,EAAC,CAACH,SAAS,CAACK,MAAV,CAAiB,CAA3B,CAA8BF,EAAC,EAAE,CAAjC,CAAoCA,EAAC,EAArC,CAAwC,CAEpC,GAAIM,CAAAA,IAAG,CAAET,SAAS,CAACG,EAAD,CAAlB,CAEA,GAAIiB,CAAAA,IAAI,CAAEX,IAAG,CAACE,KAAd,CAEA,GAAIU,CAAAA,WAAW,CAAEtB,KAAK,CAACK,QAAN,CAAegB,IAAf,EAAqBZ,MAAtC,CACA,GAAIc,CAAAA,WAAW,CAAEvB,KAAK,CAACK,QAAN,CAAegB,IAAf,EAAqBb,MAAtC,CACAc,WAAW,CAAEE,QAAQ,CAACF,WAAD,CAArB,CAEA,GAAIF,CAAC,CAAGE,WAAJ,CAAkBnB,SAAtB,CAAgC,CAE5Bc,GAAG,CAACI,IAAD,CAAH,CAAW,EAAEC,WAAb,CACAF,CAAC,EAAGE,WAAJ,CAEH,CALD,IAKM,CACFL,GAAG,CAACI,IAAD,CAAH,CAAY,CAAClB,SAAS,CAACiB,CAAX,EAAeE,WAAhB,CAA8BA,WAAzC,CACAF,CAAC,CAAEjB,SAAH,CACA,MACH,CACJ,CAEJ,CAGD,mBACI,2BAAK,EAAE,CAAC,kBAAR,eACI,0BAAI,KAAK,CAAE,CAACsB,YAAY,CAAE,iBAAf,CAAX,gBADJ,cAEI,8BAFJ,cAGI,8CAAkBzB,KAAK,CAACG,SAAxB,CAHJ,CAIKgB,WAAW,EAJhB,cAMI,uEANJ,CAOKF,GAAG,CAACS,GAAJ,CAAS,SAAAC,IAAI,qBAAI,8BAAKA,IAAL,OAAJ,EAAb,CAPL,CADJ,CAcH,CAED,cAAe5B,CAAAA,QAAf","sourcesContent":["import React, {useState} from \"react\";\r\n\r\nfunction Solution(props){\r\n\r\n    const dataArray =new Array();\r\n    const maxWeight= props.maxWeight;\r\n\r\n    for(let i=0;i<props.mainData.length;i++){\r\n        let pwratio= props.mainData[i].value1/props.mainData[i].value2;\r\n\r\n        let obj= {ratio: pwratio, index: i};\r\n        \r\n        dataArray.push(obj);\r\n    }\r\n    dataArray.sort((a,b) => (a.ratio > b.ratio) ? 1 : -1);\r\n    // console.log(dataArray);\r\n\r\n    let ans= new Array(dataArray.length).fill(0);\r\n    // console.log(ans);\r\n\r\n\r\n\r\n    // Main Code\r\n    function getSolution(){\r\n        let w=0;\r\n        \r\n\r\n        for(let i=dataArray.length-1; i>=0; i--){\r\n\r\n            let obj= dataArray[i];\r\n\r\n            let path= obj.index;\r\n\r\n            let weightvalue= props.mainData[path].value2;\r\n            let profitvalue= props.mainData[path].value1;\r\n            weightvalue= parseInt(weightvalue);\r\n\r\n            if( w + weightvalue < maxWeight){\r\n\r\n                ans[path]= 1*weightvalue;\r\n                w+= weightvalue;\r\n\r\n            } else{\r\n                ans[path]= ((maxWeight-w)/ weightvalue)* weightvalue;\r\n                w= maxWeight;\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n    \r\n\r\n    return (\r\n        <div id=\"knapsacksolution\">\r\n            <h1 style={{borderBottom: \"2px solid black\"}}>Solution : </h1>\r\n            <br></br>\r\n            <h3>Max weight : {props.maxWeight}</h3>\r\n            {getSolution()}\r\n\r\n            <h3>Weights to pick of respective items : </h3>\r\n            {ans.map( item => <h3>{item} kg</h3>)}\r\n\r\n        </div>\r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default Solution;"]},"metadata":{},"sourceType":"module"}