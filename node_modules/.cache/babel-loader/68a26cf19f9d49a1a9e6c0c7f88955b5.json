{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\GreedyAssignment\\\\assignment\\\\src\\\\Dijkstra\\\\main.js\";\nimport React, { useState } from \"react\";\nimport Input from \"./input\";\n\nfunction Solution() {\n  const [inputs, setInputs] = useState(0);\n  const [value, setValue] = useState(false);\n\n  function handleChangeNumberOfInputs(event) {\n    let value = event.target.value;\n    setInputs(value);\n  }\n\n  function getCells() {\n    let x = [];\n\n    for (let i = 0; i < inputs; i++) x.push( /*#__PURE__*/React.createElement(Input, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }\n    }));\n\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, x);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container form\",\n    style: {\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Number of Nodes\",\n    onChange: e => {\n      handleChangeNumberOfInputs(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary getInputs\",\n    onClick: () => {\n      setValue(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"Insert data\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }), value ? getCells() : null))));\n}\n\nexport default Solution;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/GreedyAssignment/assignment/src/Dijkstra/main.js"],"names":["React","useState","Input","Solution","inputs","setInputs","value","setValue","handleChangeNumberOfInputs","event","target","getCells","x","i","push","marginTop","e"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAGA,SAASC,QAAT,GAAmB;AAEf,QAAK,CAACC,MAAD,EAASC,SAAT,IAAqBJ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAK,CAACK,KAAD,EAAQC,QAAR,IAAmBN,QAAQ,CAAC,KAAD,CAAhC;;AAEA,WAASO,0BAAT,CAAoCC,KAApC,EAA0C;AACtC,QAAIH,KAAK,GAAEG,KAAK,CAACC,MAAN,CAAaJ,KAAxB;AACAD,IAAAA,SAAS,CAACC,KAAD,CAAT;AACH;;AAID,WAASK,QAAT,GAAmB;AAEf,QAAIC,CAAC,GAAC,EAAN;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACT,MAAd,EAAqBS,CAAC,EAAtB,EACID,CAAC,CAACE,IAAF,eAAO,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAED,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,CAAJ,CADJ;AAIP;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,KAAK,EAAE;AAACG,MAAAA,SAAS,EAAE;AAAZ,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,WAAW,EAAE,iBAFjB;AAGI,IAAA,QAAQ,EAAGC,CAAC,IAAG;AAACR,MAAAA,0BAA0B,CAACQ,CAAD,CAA1B;AAA8B,KAHlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI;AAAQ,IAAA,SAAS,EAAE,2BAAnB;AAA+C,IAAA,OAAO,EAAG,MAAK;AAAET,MAAAA,QAAQ,CAAC,IAAD,CAAR;AAAe,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAWKD,KAAK,GAENK,QAAQ,EAFF,GAIJ,IAfN,CAFJ,CAFJ,CADJ,CADJ;AA+BH;;AAGD,eAAeR,QAAf","sourcesContent":["import React, {useState} from \"react\";\r\nimport Input from \"./input\";\r\n\r\n\r\nfunction Solution(){\r\n\r\n    const[inputs, setInputs]= useState(0);\r\n    const[value, setValue]= useState(false);\r\n\r\n    function handleChangeNumberOfInputs(event){\r\n        let value= event.target.value;\r\n        setInputs(value);\r\n    }\r\n\r\n    \r\n\r\n    function getCells(){\r\n\r\n        let x=[]\r\n        for(let i=0;i<inputs;i++)\r\n            x.push(<Input key={i}/>)\r\n        \r\n            return(\r\n                <p>{x}</p>\r\n            )\r\n        \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"container form\" style={{marginTop: \"20px\"}}>\r\n            \r\n                <div className= \"row\">\r\n\r\n                    <div className= \"col-lg-6\">\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder= \"Number of Nodes\"\r\n                            onChange= {e =>{handleChangeNumberOfInputs(e)}}\r\n                        >\r\n                        </input>\r\n\r\n                        <button className= \"btn btn-primary getInputs\" onClick= {() =>{ setValue(true)} }>Insert data</button>\r\n                        <br></br>\r\n                        \r\n                        {value ?  \r\n\r\n                        getCells()\r\n                        \r\n                        : null}\r\n                        \r\n                    </div>\r\n                        \r\n                </div>\r\n            </div>\r\n        </div>        \r\n        \r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Solution;"]},"metadata":{},"sourceType":"module"}